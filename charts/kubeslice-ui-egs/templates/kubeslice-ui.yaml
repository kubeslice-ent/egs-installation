---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kubeslice-ui
  name: kubeslice-ui
  namespace: kubeslice-controller
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: kubeslice-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeslice-ui
  namespace: kubeslice-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeslice-ui
  template:
    metadata:
      labels:
        app: kubeslice-ui
    spec:
      containers:
      - image: '{{ .Values.kubeslice.ui.imageRegistry }}/{{ .Values.kubeslice.ui.image }}:{{ .Values.kubeslice.ui.tag }}'
        imagePullPolicy: '{{ .Values.kubeslice.ui.pullPolicy }}'
        name: kubeslice-ui
        securityContext:
            {{- with .Values.kubeslice.ui.containersecurityContext}}
            {{- toYaml . | nindent 10 }}
            {{- end }}
        env:
        - name: KUBESLICE_CONTROLLER_PROMETHEUS
          value: {{ .Values.kubeslice.prometheus.url }}
        - name: REACT_APP_SOCKET_URL
          value: 'ws://kubeslice-api-gw.kubeslice-controller.svc.cluster.local:3000'
        ports:
        - containerPort: 8080
      {{- if .Values.imagePullSecretsName }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecretsName }}
      {{- end }}
      serviceAccountName: kubeslice-api-gw
      serviceAccount: kubeslice-api-gw
      securityContext:
        {{- with .Values.kubeslice.ui.podsecurityContext }}
        {{- toYaml . | nindent 4 }}
        {{- end }}
      tolerations:
        - operator: "Exists"