# Default values for k-native.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  imageRegistry: &defaultRegistry docker.io/aveshasystems
  profile:
    openshift: false
  gpr:
    enableLimits: true
    limits:
      gpusPerNode:
        max: 100
      gpuNodes:
        max: 100
      idleTimeout:
        max: 30
        fallback: "0d0h30m"
        forceEnforcement: true
      exitDuration:
        max: 525600 # in minutes (1 Year)
      priority:
        max: 299
        bypass: 261
      workspaceGprQueue:
        max: 100
      maxGprPerWorkspace:
        max: 10000

kubeTally:
  costApiUrl: http://kubetally-pricing-service:30001
kubeslice:
  productName: egs

  ui:
    imageRegistry: aveshadev #*defaultRegistry
    image: kubeslice-ui-ent-egs
    tag: 1.11.2-RELEASE-211c9e3c
    pullPolicy: IfNotPresent
  uiv2:
    imageRegistry: aveshadev #*defaultRegistry
    image: kubeslice-ui-v2-ent-egs
    tag: 1.12.0-RELEASE-fd6f6044
    pullPolicy: IfNotPresent
  dashboard:
    enabled: false
    pullPolicy: IfNotPresent
    imageRegistry: *defaultRegistry
    proxy:
      image: kubeslice-kong
      tag: 3.7
    api:
      image: kubeslice-dashboard-api
      tag: 7.5.1
    auth:
      image: kubeslice-dashboard-auth
      tag: 7.5.1
    scrapper:
      image: kubeslice-dashboard-metrics-scraper
      tag: 7.5.0
    web:
      image: kubeslice-dashboard-web
      tag: 7.5.1
  uiproxy:
    imageRegistry: *defaultRegistry
    image: kubeslice-ui-proxy
    tag: 1.10.1
    pullPolicy: IfNotPresent
    service:
      ## For kind, set this to NodePort, elsewhere use LoadBalancer or NodePort
      ## Ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
      ##
      type: LoadBalancer
      ## if type selected to NodePort then set nodePort value if required
      # nodePort:
  apigw:
    imageRegistry: aveshadev #*defaultRegistry
    image: kubeslice-api-gw-ent-egs
    tag: 1.12.0-RELEASE-e3b53b30
    pullPolicy: IfNotPresent

  egsCoreApis:
    enabled: true
    imageRegistry: aveshadev #*defaultRegistry
    image: egs-core-apis
    tag: 1.12.1-RELEASE-fa02313e
    pullPolicy: IfNotPresent
    service:
      type: LoadBalancer

  workerinstaller:
    imageRegistry: *defaultRegistry
    image: worker-installer
    tag: 1.5.0
    pullPolicy: IfNotPresent

  prometheus:
    url: http://prometheus-service:9090 #Prometheus URL for monitoring(should be specified if needed)

egs:
  InventoryManagerAddress: egs-inventory-manager:80
  QueueManagerAddress: egs-queue-manager:80
  CoreApisUrl: http://egs-core-apis:8080

imagePullSecretsName: "kubeslice-ui-image-pull-secret"
# leave the below fields empty if secrets are managed externally.
imagePullSecrets:
  repository: https://index.docker.io/v1/ ## Value to be used incase using the docker hub images-  https://index.docker.io/v1/
  username:
  password:
  email:
  dockerconfigjson: ## Value to be used if using external secret managers
