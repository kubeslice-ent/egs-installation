# Default values for k-native.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  imageRegistry: &defaultRegistry docker.io/aveshasystems
  profile:
    openshift: false
  gpr:
    enableLimits: true
    limits:
      gpusPerNode:
        max: 100
      gpuNodes:
        max: 100
      idleTimeout:
        max: 30
        fallback: "0d0h30m"
        forceEnforcement: true
      exitDuration:
        max: 525600 # in minutes (1 Year)
      priority:
        max: 299
        bypass: 261
      workspaceGprQueue:
        max: 100

kubeTally:
  costApiUrl: http://kubetally-pricing-service:30001
kubeslice:
  productName: egs

  ui:
    imageRegistry: *defaultRegistry
    image: kubeslice-ui-ent-egs
    tag: 1.11.0
    pullPolicy: IfNotPresent
    labels:
      app: kubeslice-ui
    annotations: {}
    securityContext: 
      runAsUser: 65536
      runAsGroup: 65536
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: false
    tolerations:
    - operator: "Exists"
    affinity: {}
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #     - matchExpressions:
        #       - key: kubernetes.io/hostname
        #         operator: In
        #         values:
        #         - worker-node-1
        #         - worker-node-2
        #   preferredDuringSchedulingIgnoredDuringExecution:
        #   - weight: 100
        #     preference:
        #       matchExpressions:
        #       - key: node-type
        #         operator: In
        #         values:
        #         - controller
  uiv2:
    imageRegistry: *defaultRegistry
    image: kubeslice-ui-v2-ent-egs
    tag: 1.11.0
    pullPolicy: IfNotPresent
    labels:
      app: kubeslice-ui-v2
    annotations: {}
    securityContext: 
      runAsUser: 65536
      runAsGroup: 65536
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: false
    tolerations:
    - operator: "Exists"
    affinity: {}
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #     - matchExpressions:
        #       - key: kubernetes.io/hostname
        #         operator: In
        #         values:
        #         - worker-node-1
        #         - worker-node-2
        #   preferredDuringSchedulingIgnoredDuringExecution:
        #   - weight: 100
        #     preference:
        #       matchExpressions:
        #       - key: node-type
        #         operator: In
        #         values:
        #         - controller
  dashboard:
    enabled: false
    pullPolicy: IfNotPresent
    imageRegistry: *defaultRegistry
    proxy:
      image: kubeslice-kong
      tag: 3.7
    api:
      image: kubeslice-dashboard-api
      tag: 7.5.1
    auth:
      image: kubeslice-dashboard-auth
      tag: 7.5.1
    scrapper:
      image: kubeslice-dashboard-metrics-scraper
      tag: 7.5.0
    web:
      image: kubeslice-dashboard-web
      tag: 7.5.1
  uiproxy:
    imageRegistry: *defaultRegistry
    image: kubeslice-ui-proxy
    tag: 1.10.1
    pullPolicy: IfNotPresent
    service:
      ## For kind, set this to NodePort, elsewhere use LoadBalancer or NodePort
      ## Ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
      ##
      type: LoadBalancer
      ## if type selected to NodePort then set nodePort value if required
      # nodePort:
    labels:
      app: kubeslice-ui-proxy
    annotations: {}
    securityContext: 
      runAsUser: 65536
      runAsGroup: 65536
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: false
    tolerations:
    - operator: "Exists"
    affinity: {}
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #     - matchExpressions:
        #       - key: kubernetes.io/hostname
        #         operator: In
        #         values:
        #         - worker-node-1
        #         - worker-node-2
        #   preferredDuringSchedulingIgnoredDuringExecution:
        #   - weight: 100
        #     preference:
        #       matchExpressions:
        #       - key: node-type
        #         operator: In
        #         values:
        #         - controller
  apigw:
    imageRegistry: *defaultRegistry
    image: kubeslice-api-gw-ent-egs
    tag: 1.11.0
    pullPolicy: IfNotPresent
    labels:
      app: kubeslice-api-gw
    annotations: {}
    securityContext: 
      runAsUser: 65536
      runAsGroup: 65536
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: false
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
    tolerations:
      - operator: "Exists"
    affinity: {}
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #     - matchExpressions:
        #       - key: kubernetes.io/hostname
        #         operator: In
        #         values:
        #         - worker-node-1
        #         - worker-node-2
        #   preferredDuringSchedulingIgnoredDuringExecution:
        #   - weight: 100
        #     preference:
        #       matchExpressions:
        #       - key: node-type
        #         operator: In
        #         values:
        #         - controller

  egsCoreApis:
    enabled: true
    imageRegistry: *defaultRegistry
    image: egs-core-apis
    tag: 1.11.0
    pullPolicy: IfNotPresent
    service:
      type: LoadBalancer
    labels:
      app: egs-core-apis
      version: v1
    annotations: {}
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
    securityContext:
      runAsUser: 65536
      runAsGroup: 65536
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: false
    affinity: {}
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #     - matchExpressions:
        #       - key: kubernetes.io/hostname
        #         operator: In
        #         values:
        #         - worker-node-1
        #         - worker-node-2
        #   preferredDuringSchedulingIgnoredDuringExecution:
        #   - weight: 100
        #     preference:
        #       matchExpressions:
        #       - key: node-type
        #         operator: In
        #         values:
        #         - controller

  workerinstaller:
    imageRegistry: *defaultRegistry
    image: worker-installer
    tag: 1.5.0
    pullPolicy: IfNotPresent

  prometheus:
    url: http://prometheus-service:9090 #Prometheus URL for monitoring(should be specified if needed)

egs:
  InventoryManagerAddress: egs-inventory-manager:80
  QueueManagerAddress: egs-queue-manager:80
  CoreApisUrl: http://egs-core-apis:8080

imagePullSecretsName: "kubeslice-ui-image-pull-secret"
# leave the below fields empty if secrets are managed externally.
imagePullSecrets:
  repository: https://index.docker.io/v1/ ## Value to be used incase using the docker hub images-  https://index.docker.io/v1/
  username:
  password:
  email:
  dockerconfigjson: ## Value to be used if using external secret managers
