---
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.aiops.labels }}
  labels:
  {{ toYaml .Values.aiops.labels | nindent 4 }}
  {{- end }}
  {{- if .Values.aiops.annotations }}
  annotations:
  {{ toYaml .Values.aiops.annotations | nindent 4 }}
  {{- end }}
  name: aiops-operator
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- if .Values.aiops.labels }}
    {{ toYaml .Values.aiops.labels | nindent 6 }}
    {{- end }}
  template:
    metadata:
      annotations:
        {{- if .Values.aiops.annotations }}
        {{ toYaml .Values.aiops.annotations | nindent 8 }}
        {{- end }}
      {{- if .Values.aiops.labels }}
      labels:
      {{ toYaml .Values.aiops.labels | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.aiops.affinity }}
      affinity:
      {{ toYaml .Values.aiops.affinity | nindent 8 }}
      {{- end }}
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: "{{ .Values.rbacproxy.imageRegistry }}/{{ .Values.rbacproxy.image }}:{{ .Values.rbacproxy.tag }}"
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          {{- if .Values.aiops.resources }}
          resources: 
          {{ toYaml .Values.aiops.resources | nindent 12 }}
          {{- end }}
          securityContext:
          {{- if .Values.rbacproxy.containerSecurityContext }} 
          {{ toYaml .Values.rbacproxy.containerSecurityContext | nindent 12 }}
          {{- end }}
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=:8080
            - --leader-elect
            - --gpu-monitoring-interval=1m
            - --workload-reconciler-interval=30s
          command:
            - /manager
          image: "{{ .Values.aiops.imageRegistry }}/{{ .Values.aiops.image }}:{{ .Values.aiops.tag }}"
          imagePullPolicy: "{{ .Values.aiops.pullPolicy }}"
          env:
            - name: LOG_LEVEL
              value: {{ .Values.aiops.logLevel }}
            - name: DEV_MODE
              value: "false"
            - name: HUB_HOST_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: kubeslice-hub
                  key: endpoint
            - name: HUB_PROJECT_NAMESPACE
              valueFrom:
                secretKeyRef:
                  name: kubeslice-hub
                  key: namespace
            - name: CLUSTER_NAME
              value: {{ .Values.cluster.name }}
            - name: CLUSTER_ENDPOINT
              value: {{ .Values.cluster.endpoint }}
            - name: PROMETHEUS_SERVICE_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: aiops-config
                  key: PROMETHEUS_SERVICE_ENDPOINT
            - name: GRAFANA_DASHBOARD_URL
              valueFrom:
                configMapKeyRef:
                  name: aiops-config
                  key: GRAFANA_DASHBOARD_URL
            - name: AIOPS_OPERATOR_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: ENABLE_WEBHOOKS
              value: "true"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- if .Values.aiops.resources }}
          resources: {{ toYaml .Values.aiops.resources | nindent 12 }}
          {{- end }}
          securityContext:
          {{- if .Values.aiops.containerSecurityContext }}
          {{ toYaml .Values.aiops.containerSecurityContext | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/hub-serviceaccount
              name: hub-secret
              readOnly: true
            - mountPath: /etc/config
              name: aiops-config-volume
              readOnly: true
            - mountPath: /etc/webhook/certs
              name: webhook-certs
              readOnly: true
      serviceAccountName: aiops-operator-access
      securityContext:
      {{- if .Values.aiops.podSecurityContext }}
      {{ toYaml .Values.aiops.podSecurityContext | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
        - name: aiops-config-volume
          configMap:
            name: aiops-config
        - name: webhook-certs
          secret:
            secretName: aiops-admission-webhook-certs
        - name: hub-secret
          secret:
            defaultMode: 420
            secretName: kubeslice-hub
            items:
              - key: "ca.crt"
                path: "ca.crt"
              - key: "token"
                path: "token"
      imagePullSecrets:
        - name: kubeslice-image-pull-secret
      # Allow this pod to be scheduled on nodes with any taints, as it is a critical component
      # and needs to tolerate all taints to ensure it can run on any available node.
      {{- if .Values.aiops.tolerations }}
      tolerations: {{ toYaml .Values.aiops.tolerations | nindent 8 }}
      {{- end }}
