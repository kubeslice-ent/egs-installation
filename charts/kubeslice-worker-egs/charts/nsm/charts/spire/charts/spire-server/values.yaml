# Default values for spire-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Variables added

global:
  imageRegistry: docker.io/aveshasystems

spireServer:
  imageRegistry: spire-server
  imageTag: 1.9.2

# TODO: check and remove unneeded values

replicaCount: 1

image:
  repository: docker.io/aveshasystems/nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

caTTL: 24h
upstreamAuthority:
  disk:
    enabled: true
    secret:
      create: true
      name: "spire-ca-certs"
      data:
        certificate: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpekNDQW5PZ0F3SUJBZ0lVUENveForSStnQTNmcW4vRVo4NDI3V1J1K0cwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1ZURUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERU9NQXdHQTFVRUF3d0ZiWGt0WTJFd0hoY05NalF3Ck5qQTNNVEl5T1RFd1doY05Namt3TmpBMk1USXlPVEV3V2pCVk1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUUKQ0F3S1UyOXRaUzFUZEdGMFpURWhNQjhHQTFVRUNnd1lTVzUwWlhKdVpYUWdWMmxrWjJsMGN5QlFkSGtnVEhSawpNUTR3REFZRFZRUUREQVZ0ZVMxallUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFMd3U2VnRjVndMWjcwaHNMQnFWZFF6bFc3WC9zRlgza2FCZlgrK3p1TlZTbk90ZUpkQ21yQ1EyQUhLbk8wNjIKemJmdzAwYTlhVXZZZ3AyN3k0S2M5UzlMSFlZNjVqaW1JUmwvY2RqdWZaTjF0RHlwaGFEWVZtYlMzZFpQMVRiaApOdEpFOWZldldlRGpRTkphbkhWbnBhQWQwd04rd0pGbGN4Rkh2QVVHT3hUc05aSHR6V25CelBiSUVMY3NnUlFIClRXMHNFbGVjY2VlcFludEhKV2tyVjdEdUhCNkhYWDdxajJ4K2grTUIweWV3Y09taDZIcEdkK2VzTS9CQVBWZEMKZ1M4ZHA2RFlvNTZyNlJMUHdreWhxMktZbXhyYVlqcVFQQlQvbTR2UEhweHFnMzkvMG9MVms3VnV5Yis3OWVmVwpSaVl1NTZkbFNXMzJ2NVhMdnowNm51MENBd0VBQWFOVE1GRXdIUVlEVlIwT0JCWUVGR1pnWVpBVEpkNFNtTThsCmErS3JjYmNvQ3BsSE1COEdBMVVkSXdRWU1CYUFGR1pnWVpBVEpkNFNtTThsYStLcmNiY29DcGxITUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBeFFwclUzVkorSXpCYVdSQUFCYWVmMQpTMFZPZ3ZSQmZFRjBLRjZrMllvUmpGaHJPbk5mZU1Hd1EvS1ZBemxEMU5OVitncnk4MEdCOHhhcXRhcWMwZk80CnIrR2tpcXpyeEVYcEl5K1N6cDltYW5oY2hrQ29oSlBQK1RUTXgvMW1CY05EZ1ZvczV0OHhmeXdBdlA5ZjVoQ1IKc0tqUnVudkIxNGg0aDdIdWt0ajdZZGxHQWJFLzdvMnIyTGhwSGFIWHVxUUtxdXlIdmM4TVVZOEN4eFFiRkdIZAoxRFNtdGNLSnphenNSZ2tmVTFxL0FTT1BlRU1icmJoVWdDQ0RKTFl1ZnRnd3hjYnNLbVdvY2doa2o0MEVsWHZGCnBvTU51UDFOTlRYOUcyL0ZTQUpFUHBHZzk0WTRjc3luZjQ1dEZpZnRPamNuS01tZ2ViWTM2SjBkWi9sNnAyYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQzhMdWxiWEZjQzJlOUkKYkN3YWxYVU01VnUxLzdCVjk1R2dYMS92czdqVlVwenJYaVhRcHF3a05nQnlwenRPdHMyMzhOTkd2V2xMMklLZAp1OHVDblBVdlN4MkdPdVk0cGlFWmYzSFk3bjJUZGJROHFZV2cyRlptMHQzV1Q5VTI0VGJTUlBYM3Ixbmc0MERTCldweDFaNldnSGRNRGZzQ1JaWE1SUjd3RkJqc1U3RFdSN2MxcHdjejJ5QkMzTElFVUIwMXRMQkpYbkhIbnFXSjcKUnlWcEsxZXc3aHdlaDExKzZvOXNmb2ZqQWRNbnNIRHBvZWg2Um5mbnJEUHdRRDFYUW9FdkhhZWcyS09lcStrUwp6OEpNb2F0aW1Kc2EybUk2a0R3VS81dUx6eDZjYW9OL2Y5S0MxWk8xYnNtL3UvWG4xa1ltTHVlblpVbHQ5citWCnk3ODlPcDd0QWdNQkFBRUNnZ0VBRDE3Q01aNUhxYjhmZmxTbzFOMEY0VWFaMHpJdDlyK1FvSlF1L2t3NWJ3eGYKTG1ib3JoNUc2M0xtWGlHa1JFZ2JEUWlQQVIvM0NlVUdaTUs4eGJvZDJUM2Q0ZmozNm9Mcks0TFBkaTZqTkJoRwpOSTdndXJsTGMvemZkZmN4b2k0S21tbXhNTE5Ib3pOOGpSSFlrS0JRRktxMW5GQ2pMWWVuT29TWGxLTjV6NDlkCmp0T29UaTZaaHp3MU9jVzVqOE9oMzRhWWVaTDhyVmRGKzVBSU1ESFZza2RyVkFCU3lHZWFwaFB5Zmd0c2JFWm8KVDczM2RjamJ6dUJtNk9UWkFNYUljMndMcko3Z1FaTklja0xFVGpVN2tvUDc3K08xaE43NFd5R3ZiTzJ0N3dTSQowbVdoN2xvMHpWZUh0bGpVRXRNSmdyUWo4NjBvUGZsK2JDVjdwVEY1WVFLQmdRRG02Mkc0eTM0bUpGaUV5TFF0CkphWVE5K0d5N3BEWVB3STk1RkdyTE0zQktRK1VzdG1reUE0QmdpMTA1djdaZE1jQXJpaTBIVVo4ZVo4WkNpUzMKK2hpcTR1R3NzdmZ3cHY1K3lCNnRCbTNucVU4ZTE2WHRqZUFOQVMzQ0R6S3ZEQlJXZjl6dVN1YTF4RzFGNHB1ago3NHFlYkNQV05xeDF6VzgrNlpjOVNWSG1NUUtCZ1FEUW4wUjQxZU95UnF2aFFLVGFZRW8vNXVpYUpiM0F0MXlMClRWREJkZVBnMUdKS1E1Z0pBb0NkcmxEQ2l2MG9nSkZ0bEM4S3dGbHhUcjlnSXJDTWpEaTlZQVNrVTJ5TnZPb1UKa2pJeEhoMXN2ZXhqVi94a3BDOFBwTHBaUnk5MDlXaWFwaUk3OEVDb0VHbEEwWjFJZWk3dG1vc01lYXNFWHRxbQp6RzJHY0oySmZRS0JnRTBHOVVqME1EYys1bndjaXVXSWFuVzhpZi9xemt3ajhIWit3N05LdGJPYUk4VmhSM0pNCi9VY0ppbW8xWjR0WUJjMjNTb0tTUldIZUcvRDVUamhFWjVnUktHQTRMcmFLcmRmU24xRHVGUmt5Zzk3dzVqdHcKbU8wZG1JcmtFTzhOSTNlYkhUSXJyL3V2OHhkZHVMY2RmMnJLL2NWRjVZOUNJTHFtcHJsZHpNRHhBb0dBSlhBLwppSFBSN2Q5UzN4U0x3UWpBcW1FVTR2emM1YVhDUE5sK0lZbTNnRlI4NHhqb1FzMnBLU0xzS1UxcUN3ZXZrWHVqClNZbWxRM2svVE5CTTRKd1ZYcDdKbG5mR0psVjlxSDFuOW5xU0N6NjJHa25pNkdpeWJWdEJlZDRWZlNiQlErZUcKZ3owbFRVUE1yNjR1VEtCb3BZa3paT1M4dFFjVXRCUkJuM3U4T2IwQ2dZRUFwME5ha25JNWYreUw3MnJxbmpwVgo4VFY1RGIzUTBzMTgvdGVwTlRwT1ltL094OFlCS2I0SWdKUjN1M2ZpMWRXdkNXRGsrR2wzVnk2Unh5U2RONm1wCkdramsxcEp0elJzd3pUcyttWjZ0bng5eDJabHNMRURPZ1Y1eFJIMnQ3UG9SVUtqVHQrbUp1OXNZdzZYeTZPZmsKT3JRRXNHQWNsZ2lQaGRTSzhxL2VtR2s9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
        bundle: ""

nodeSelector: {}

tolerations: []

affinity: {}
