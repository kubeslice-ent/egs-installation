apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-kserve-preinstall-configmap
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-17"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
data:
  pre-install.sh: |-
    #!/bin/sh

    echo "Checking for deployments with label 'control-plane: kserve-controller-manager'..."
    DEPLOYMENTS=$(kubectl get deployments -A -l "control-plane=kserve-controller-manager" -o jsonpath="{.items[*].metadata.name}")

    if [ -z "$DEPLOYMENTS" ]; then
      echo "No deployment with label 'control-plane: kserve-controller-manager' found. Continue installation..."
      exit 0
    else
      echo "kserve deployments found"
      echo "To continue using existing kserve, make sure kserve version is >= v1.13.0 & kserve.enabled=false during kubeslice-worker-egs installation.."
      exit 1
    fi
