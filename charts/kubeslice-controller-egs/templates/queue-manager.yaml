apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.egs.queueManager.labels }}
  labels:
  {{ toYaml .Values.egs.queueManager.labels | nindent 4 }}
  {{- end }}
  {{- if .Values.egs.queueManager.annotations }}
  annotations:
  {{ toYaml .Values.egs.queueManager.annotations | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
  name: egs-queue-manager
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- if .Values.egs.queueManager.labels }}
    {{ toYaml .Values.egs.queueManager.labels | nindent 6 }}
    {{- end }}
  template:
    metadata:
      {{- if .Values.egs.queueManager.annotations }}
      annotations:
        {{ toYaml .Values.egs.queueManager.annotations | nindent 8 }}
      {{- end }}
      {{- if .Values.egs.queueManager.labels }}
      labels:
      {{ toYaml .Values.egs.queueManager.labels | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.egs.queueManager.affinity }}
      affinity:
      {{ toYaml .Values.egs.queueManager.affinity | nindent 8 }}
      {{- end }}
      containers:
        - name: "queue-manager"
          securityContext:
          {{- if .Values.egs.queueManager.containerSecurityContext }}
          {{ toYaml .Values.egs.queueManager.containerSecurityContext | nindent 12 }}
          {{- end }}
          image: '{{ .Values.global.imageRegistry }}/{{ .Values.egs.queueManager.image }}:{{ .Values.egs.queueManager.tag }}'
          ports:
            - containerPort: 50051
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: {{ .Values.egs.queueManager.imagePullPolicy }}
          env:
          - name: QMGR_CHECK_PERIOD
            value: "{{ .Values.egs.gprManager.qmgrCheckPeriod }}"
          - name: MAX_DELAYED_COUNT
            value: "{{ .Values.egs.gprManager.maxDelayedCount }}"
          - name: APP_ENV
            value: "{{ .Values.egs.queueManager.appEnv }}"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: gpr-manager-access
      serviceAccount: gpr-manager-access
      securityContext:
      {{- if .Values.egs.queueManager.podSecurityContext }}
      {{ toYaml .Values.egs.queueManager.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecretsName }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecretsName }}
      {{- end }}
      schedulerName: default-scheduler
      {{- if .Values.egs.queueManager.tolerations }}
      tolerations: 
      {{ toYaml .Values.egs.queueManager.tolerations | nindent 8 }}
      {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.egs.queueManager.service.name }}
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http
      protocol: TCP
      port: {{ .Values.egs.queueManager.service.port }}
      targetPort: 50051
  selector:
  {{- if .Values.egs.queueManager.labels }}
  {{ toYaml .Values.egs.queueManager.labels | nindent 4 }}
  {{- end }}
