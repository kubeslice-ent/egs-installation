apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: inventory-controller-manager
  name: egs-inventory-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: inventory-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: inventory-controller-manager
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: "node.kubernetes.io/gpu"
                    operator: "DoesNotExist"
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
          - /manager
        image: "{{ .Values.egs.inventory.imageRegistry }}/{{ .Values.egs.inventory.image }}:{{ .Values.egs.inventory.tag }}"
        imagePullPolicy: "{{ .Values.egs.inventory.pullPolicy }}"
        env:
          - name: LOG_LEVEL
            value: {{ .Values.egs.inventory.logLevel }}
          - name: DEV_MODE
            value: "false"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          runAsUser: 65536
          runAsGroup: 65536
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
      securityContext:
        runAsUser: 65536               # Non-root user
        runAsGroup: 65536              # Non-root group
        runAsNonRoot: true             # Ensure the container does not run as root
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: inventory-manager-access
      terminationGracePeriodSeconds: 10
      {{- if .Values.imagePullSecretsName }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecretsName }}
      {{- end }}
      tolerations:
        - operator: "Exists"
