---
  {{- if and .Values.imagePullSecrets .Values.imagePullSecrets.repository .Values.imagePullSecrets.username .Values.imagePullSecrets.password }}
apiVersion: v1
data:
  .dockerconfigjson: {{
                        printf "{\"auths\":{\"%s\":{\"username\":\"%s\",\"password\":\"%s\",\"email\":\"%s\",\"auth\":\"%s\"}}}"
                        .Values.imagePullSecrets.repository
                        .Values.imagePullSecrets.username
                        .Values.imagePullSecrets.password
                        .Values.imagePullSecrets.email
                        (printf "%s:%s" .Values.imagePullSecrets.username .Values.imagePullSecrets.password | b64enc)
                         | b64enc
                     }}
kind: Secret
metadata:
  name: kubeslice-image-pull-secret
  namespace: kubeslice-controller
type: kubernetes.io/dockerconfigjson
  {{- end }}
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: clusters.controller.kubeslice.io
spec:
  group: controller.kubeslice.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              clusterProperty:
                description: put in an object
                properties:
                  geoLocation:
                    description: GeoLocation contains information regarding Geographical
                      Location of the Cluster
                    properties:
                      cloudProvider:
                        description: CloudProvider is the cloud service provider
                        type: string
                      cloudRegion:
                        description: CloudRegion is the region of the cloud
                        type: string
                      latitude:
                        description: Latitude is the latitude of the cluster
                        type: string
                      longitude:
                        description: Longitude is the longitude of the cluster
                        type: string
                    type: object
                  monitoring:
                    description: Monitoring contains the Kubernetes Monitoring Dashboard
                    properties:
                      kubernetesDashboard:
                        description: KubernetesDashboard contains the information
                          regarding Kubernetes Monitoring Dashboard
                        properties:
                          accessToken:
                            description: AccessToken is the Access Token to access
                              the KubernetesDashboard
                            type: string
                          enabled:
                            description: Enabled is the enable status of the KubernetesDashboard
                            type: boolean
                          endpoint:
                            description: Endpoint is the base endpoint to access the
                              kubernetes dashboard
                            type: string
                          ingressPrefix:
                            description: IngressPrefix is the prefix of ingress gateway
                              for KubernetesDashboard
                            type: string
                        type: object
                    type: object
                  telemetry:
                    description: Telemetry contains Telemetry information
                    properties:
                      enabled:
                        description: Enabled is the enable status of the Telemetry
                        type: boolean
                      endpoint:
                        description: Endpoint is the Telemetry Endpoint
                        type: string
                      telemetryProvider:
                        description: TelemetryProvider is the Telemetry Provider information
                        type: string
                    type: object
                type: object
              networkInterface:
                description: NetworkInterface is the network interface attached with
                  the cluster.
                type: string
              nodeIP:
                description: NodeIP is the IP address of the Node - deprecated field
                  use Plural NodeIPs
                type: string
              nodeIPs:
                items:
                  type: string
                type: array
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              clusterHealth:
                description: ClusterHealth shows the health of the worker cluster
                properties:
                  clusterHealthStatus:
                    description: ClusterHealthStatus shows the overall health status
                      of the cluster
                    enum:
                    - Normal
                    - Warning
                    type: string
                  componentStatuses:
                    description: ComponentStatuses shows the health status of individual
                      components in the cluster
                    items:
                      properties:
                        component:
                          description: Component name
                          type: string
                        componentHealthStatus:
                          enum:
                          - Normal
                          - Warning
                          - Error
                          type: string
                      required:
                      - component
                      - componentHealthStatus
                      type: object
                    type: array
                  lastUpdated:
                    description: LastUpdated is the timestamp when healthstatus was
                      updated
                    format: date-time
                    type: string
                type: object
              cniSubnet:
                description: CniSubnet is the podip and service ip subnet of CNI
                items:
                  type: string
                type: array
              isDeregisterInProgress:
                description: IsDeregisterInProgress is the flag to check if the cluster
                  deregister is InProgress
                type: boolean
              namespaces:
                description: Namespaces present in cluster
                items:
                  properties:
                    name:
                      type: string
                    sliceName:
                      type: string
                  type: object
                type: array
              networkPresent:
                default: false
                description: NetworkPresent denotes if the networking components (NSM,
                  Spire) are installed on a cluster
                type: boolean
              nodeIPs:
                description: NodeIPs of the gateway node of worker cluster
                items:
                  type: string
                type: array
              nodeInventory:
                description: NodeInventory is the inventory of the nodes in the cluster
                items:
                  properties:
                    gpuProperties:
                      properties:
                        gpuNodeType:
                          type: string
                        gpuSharingType:
                          type: string
                        gpuUtilization:
                          properties:
                            allocated:
                              type: string
                            free:
                              type: string
                            memory:
                              type: string
                            reserved:
                              items:
                                properties:
                                  numReservedGPUs:
                                    type: string
                                  sliceName:
                                    type: string
                                type: object
                              type: array
                            totalGPUs:
                              type: string
                          type: object
                      type: object
                    name:
                      type: string
                    type:
                      enum:
                      - cpu
                      - gpu
                      type: string
                  type: object
                type: array
              registrationStatus:
                description: RegistrationStatus shows the status of cluster registration
                enum:
                - Pending
                - InProgress
                - Failed
                - Registered
                - DeregisterInProgress
                - DeregisterFailed
                - Deregistered
                type: string
              secretName:
                description: SecretName is the name of the secret for the worker cluster.
                type: string
              vCPURestriction:
                description: VCPURestriction is the restriction on the cluster disabling
                  the creation of new pods
                properties:
                  enforceRestrictions:
                    description: EnforceRestrictions is the flag to check if the cluster
                      is restricted
                    type: boolean
                  lastUpdatedTimestamp:
                    description: LastUpdatedTimestamp is the timestamp when the enforcement
                      was updated
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: gpuworkloads.worker.kubeslice.io
spec:
  group: worker.kubeslice.io
  names:
    kind: GPUWorkload
    listKind: GPUWorkloadList
    plural: gpuworkloads
    singular: gpuworkload
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              dashboardBaseUrl:
                type: string
              gprName:
                type: string
              workloadDetails:
                items:
                  properties:
                    gpuDetails:
                      properties:
                        gpuIds:
                          items:
                            type: string
                          type: array
                      type: object
                    parameters:
                      additionalProperties:
                        type: string
                      type: object
                    workloadName:
                      type: string
                    workloadNamespace:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: replicationjobconfigs.controller.kubeslice.io
spec:
  group: controller.kubeslice.io
  names:
    kind: ReplicationJobConfig
    listKind: ReplicationJobConfigList
    plural: replicationjobconfigs
    singular: replicationjobconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReplicationJobConfig is the Schema for the replicationjobconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReplicationJobConfigSpec defines the desired state of ReplicationJobConfig
            properties:
              backupFrequency:
                description: BackupFrequency is the frequency of backups
                type: string
              k8sObjectsOnly:
                description: K8sObjectsOnly is a flag to indicate if only k8s objects
                  should be migrated
                type: boolean
              namespace:
                description: Namespace is the namespace to migrate
                type: string
              preCheckFlag:
                enum:
                - ignorePrechecks
                - stopOnPrecheck
                - reRunPrecheck
                type: string
              pvDataOnly:
                description: PVDataOnly is a flag to indicate if only PV data should
                  be migrated
                type: boolean
              rawSpec:
                description: ReplicationRawSpec defines the raw spec of the replication.
                  Raw specs take precedence over the other specs
                nullable: true
                properties:
                  backup:
                    description: Backup is the velero backup specs
                    properties:
                      csiSnapshotTimeout:
                        description: CSISnapshotTimeout specifies the time used to
                          wait for CSI VolumeSnapshot status turns to ReadyToUse during
                          creation, before returning error as timeout. The default
                          value is 10 minute.
                        type: string
                      datamover:
                        description: DataMover specifies the data mover to be used
                          by the backup. If DataMover is "" or "velero", the built-in
                          data mover will be used.
                        type: string
                      defaultVolumesToFsBackup:
                        description: DefaultVolumesToFsBackup specifies whether pod
                          volume file system backup should be used for all volumes
                          by default.
                        nullable: true
                        type: boolean
                      defaultVolumesToRestic:
                        description: "DefaultVolumesToRestic specifies whether restic
                          should be used to take a backup of all pod volumes by default.
                          \n Deprecated: this field is no longer used and will be
                          removed entirely in future. Use DefaultVolumesToFsBackup
                          instead."
                        nullable: true
                        type: boolean
                      excludedClusterScopedResources:
                        description: ExcludedClusterScopedResources is a slice of
                          cluster-scoped resource type names to exclude from the backup.
                          If set to "*", all cluster-scoped resource types are excluded.
                          The default value is empty.
                        items:
                          type: string
                        nullable: true
                        type: array
                      excludedNamespaceScopedResources:
                        description: ExcludedNamespaceScopedResources is a slice of
                          namespace-scoped resource type names to exclude from the
                          backup. If set to "*", all namespace-scoped resource types
                          are excluded. The default value is empty.
                        items:
                          type: string
                        nullable: true
                        type: array
                      excludedNamespaces:
                        description: ExcludedNamespaces contains a list of namespaces
                          that are not included in the backup.
                        items:
                          type: string
                        nullable: true
                        type: array
                      excludedResources:
                        description: ExcludedResources is a slice of resource names
                          that are not included in the backup.
                        items:
                          type: string
                        nullable: true
                        type: array
                      hooks:
                        description: Hooks represent custom behaviors that should
                          be executed at different phases of the backup.
                        properties:
                          resources:
                            description: Resources are hooks that should be executed
                              when backing up individual instances of a resource.
                            items:
                              description: BackupResourceHookSpec defines one or more
                                BackupResourceHooks that should be executed based
                                on the rules defined for namespaces, resources, and
                                label selector.
                              properties:
                                excludedNamespaces:
                                  description: ExcludedNamespaces specifies the namespaces
                                    to which this hook spec does not apply.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                excludedResources:
                                  description: ExcludedResources specifies the resources
                                    to which this hook spec does not apply.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                includedNamespaces:
                                  description: IncludedNamespaces specifies the namespaces
                                    to which this hook spec applies. If empty, it
                                    applies to all namespaces.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                includedResources:
                                  description: IncludedResources specifies the resources
                                    to which this hook spec applies. If empty, it
                                    applies to all resources.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                labelSelector:
                                  description: LabelSelector, if specified, filters
                                    the resources to which this hook spec applies.
                                  nullable: true
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                name:
                                  description: Name is the name of this hook.
                                  type: string
                                post:
                                  description: PostHooks is a list of BackupResourceHooks
                                    to execute after storing the item in the backup.
                                    These are executed after all "additional items"
                                    from item actions are processed.
                                  items:
                                    description: BackupResourceHook defines a hook
                                      for a resource.
                                    properties:
                                      exec:
                                        description: Exec defines an exec hook.
                                        properties:
                                          command:
                                            description: Command is the command and
                                              arguments to execute.
                                            items:
                                              type: string
                                            minItems: 1
                                            type: array
                                          container:
                                            description: Container is the container
                                              in the pod where the command should
                                              be executed. If not specified, the pod's
                                              first container is used.
                                            type: string
                                          onError:
                                            description: OnError specifies how Velero
                                              should behave if it encounters an error
                                              executing this hook.
                                            enum:
                                            - Continue
                                            - Fail
                                            type: string
                                          timeout:
                                            description: Timeout defines the maximum
                                              amount of time Velero should wait for
                                              the hook to complete before considering
                                              the execution a failure.
                                            type: string
                                        required:
                                        - command
                                        type: object
                                    required:
                                    - exec
                                    type: object
                                  type: array
                                pre:
                                  description: PreHooks is a list of BackupResourceHooks
                                    to execute prior to storing the item in the backup.
                                    These are executed before any "additional items"
                                    from item actions are processed.
                                  items:
                                    description: BackupResourceHook defines a hook
                                      for a resource.
                                    properties:
                                      exec:
                                        description: Exec defines an exec hook.
                                        properties:
                                          command:
                                            description: Command is the command and
                                              arguments to execute.
                                            items:
                                              type: string
                                            minItems: 1
                                            type: array
                                          container:
                                            description: Container is the container
                                              in the pod where the command should
                                              be executed. If not specified, the pod's
                                              first container is used.
                                            type: string
                                          onError:
                                            description: OnError specifies how Velero
                                              should behave if it encounters an error
                                              executing this hook.
                                            enum:
                                            - Continue
                                            - Fail
                                            type: string
                                          timeout:
                                            description: Timeout defines the maximum
                                              amount of time Velero should wait for
                                              the hook to complete before considering
                                              the execution a failure.
                                            type: string
                                        required:
                                        - command
                                        type: object
                                    required:
                                    - exec
                                    type: object
                                  type: array
                              required:
                              - name
                              type: object
                            nullable: true
                            type: array
                        type: object
                      includeClusterResources:
                        description: IncludeClusterResources specifies whether cluster-scoped
                          resources should be included for consideration in the backup.
                        nullable: true
                        type: boolean
                      includedClusterScopedResources:
                        description: IncludedClusterScopedResources is a slice of
                          cluster-scoped resource type names to include in the backup.
                          If set to "*", all cluster-scoped resource types are included.
                          The default value is empty, which means only related cluster-scoped
                          resources are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      includedNamespaceScopedResources:
                        description: IncludedNamespaceScopedResources is a slice of
                          namespace-scoped resource type names to include in the backup.
                          The default value is "*".
                        items:
                          type: string
                        nullable: true
                        type: array
                      includedNamespaces:
                        description: IncludedNamespaces is a slice of namespace names
                          to include objects from. If empty, all namespaces are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      includedResources:
                        description: IncludedResources is a slice of resource names
                          to include in the backup. If empty, all resources are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      itemOperationTimeout:
                        description: ItemOperationTimeout specifies the time used
                          to wait for asynchronous BackupItemAction operations The
                          default value is 1 hour.
                        type: string
                      labelSelector:
                        description: LabelSelector is a metav1.LabelSelector to filter
                          with when adding individual objects to the backup. If empty
                          or nil, all objects are included. Optional.
                        nullable: true
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      metadata:
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      orLabelSelectors:
                        description: OrLabelSelectors is list of metav1.LabelSelector
                          to filter with when adding individual objects to the backup.
                          If multiple provided they will be joined by the OR operator.
                          LabelSelector as well as OrLabelSelectors cannot co-exist
                          in backup request, only one of them can be used.
                        items:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        nullable: true
                        type: array
                      orderedResources:
                        additionalProperties:
                          type: string
                        description: OrderedResources specifies the backup order of
                          resources of specific Kind. The map key is the resource
                          name and value is a list of object names separated by commas.
                          Each resource name has format "namespace/objectname".  For
                          cluster resources, simply use "objectname".
                        nullable: true
                        type: object
                      resourcePolicy:
                        description: ResourcePolicy specifies the referenced resource
                          policies that backup should follow
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                        x-kubernetes-map-type: atomic
                      snapshotMoveData:
                        description: SnapshotMoveData specifies whether snapshot data
                          should be moved
                        nullable: true
                        type: boolean
                      snapshotVolumes:
                        description: SnapshotVolumes specifies whether to take snapshots
                          of any PV's referenced in the set of objects included in
                          the Backup.
                        nullable: true
                        type: boolean
                      storageLocation:
                        description: StorageLocation is a string containing the name
                          of a BackupStorageLocation where the backup should be stored.
                        type: string
                      ttl:
                        description: TTL is a time.Duration-parseable string describing
                          how long the Backup should be retained for.
                        type: string
                      volumeSnapshotLocations:
                        description: VolumeSnapshotLocations is a list containing
                          names of VolumeSnapshotLocations associated with this backup.
                        items:
                          type: string
                        type: array
                    type: object
                  restore:
                    description: Restore is the velero restore specs
                    properties:
                      backupName:
                        description: BackupName is the unique name of the Velero backup
                          to restore from.
                        type: string
                      excludedNamespaces:
                        description: ExcludedNamespaces contains a list of namespaces
                          that are not included in the restore.
                        items:
                          type: string
                        nullable: true
                        type: array
                      excludedResources:
                        description: ExcludedResources is a slice of resource names
                          that are not included in the restore.
                        items:
                          type: string
                        nullable: true
                        type: array
                      existingResourcePolicy:
                        description: ExistingResourcePolicy specifies the restore
                          behavior for the Kubernetes resource to be restored
                        nullable: true
                        type: string
                      hooks:
                        description: Hooks represent custom behaviors that should
                          be executed during or post restore.
                        properties:
                          resources:
                            items:
                              description: RestoreResourceHookSpec defines one or
                                more RestoreResrouceHooks that should be executed
                                based on the rules defined for namespaces, resources,
                                and label selector.
                              properties:
                                excludedNamespaces:
                                  description: ExcludedNamespaces specifies the namespaces
                                    to which this hook spec does not apply.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                excludedResources:
                                  description: ExcludedResources specifies the resources
                                    to which this hook spec does not apply.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                includedNamespaces:
                                  description: IncludedNamespaces specifies the namespaces
                                    to which this hook spec applies. If empty, it
                                    applies to all namespaces.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                includedResources:
                                  description: IncludedResources specifies the resources
                                    to which this hook spec applies. If empty, it
                                    applies to all resources.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                labelSelector:
                                  description: LabelSelector, if specified, filters
                                    the resources to which this hook spec applies.
                                  nullable: true
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                name:
                                  description: Name is the name of this hook.
                                  type: string
                                postHooks:
                                  description: PostHooks is a list of RestoreResourceHooks
                                    to execute during and after restoring a resource.
                                  items:
                                    description: RestoreResourceHook defines a restore
                                      hook for a resource.
                                    properties:
                                      exec:
                                        description: Exec defines an exec restore
                                          hook.
                                        properties:
                                          command:
                                            description: Command is the command and
                                              arguments to execute from within a container
                                              after a pod has been restored.
                                            items:
                                              type: string
                                            minItems: 1
                                            type: array
                                          container:
                                            description: Container is the container
                                              in the pod where the command should
                                              be executed. If not specified, the pod's
                                              first container is used.
                                            type: string
                                          execTimeout:
                                            description: ExecTimeout defines the maximum
                                              amount of time Velero should wait for
                                              the hook to complete before considering
                                              the execution a failure.
                                            type: string
                                          onError:
                                            description: OnError specifies how Velero
                                              should behave if it encounters an error
                                              executing this hook.
                                            enum:
                                            - Continue
                                            - Fail
                                            type: string
                                          waitForReady:
                                            description: WaitForReady ensures command
                                              will be launched when container is Ready
                                              instead of Running.
                                            nullable: true
                                            type: boolean
                                          waitTimeout:
                                            description: WaitTimeout defines the maximum
                                              amount of time Velero should wait for
                                              the container to be Ready before attempting
                                              to run the command.
                                            type: string
                                        required:
                                        - command
                                        type: object
                                      init:
                                        description: Init defines an init restore
                                          hook.
                                        properties:
                                          initContainers:
                                            description: InitContainers is list of
                                              init containers to be added to a pod
                                              during its restore.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                            x-kubernetes-preserve-unknown-fields: true
                                          timeout:
                                            description: Timeout defines the maximum
                                              amount of time Velero should wait for
                                              the initContainers to complete.
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      includeClusterResources:
                        description: IncludeClusterResources specifies whether cluster-scoped
                          resources should be included for consideration in the restore.
                          If null, defaults to true.
                        nullable: true
                        type: boolean
                      includedNamespaces:
                        description: IncludedNamespaces is a slice of namespace names
                          to include objects from. If empty, all namespaces are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      includedResources:
                        description: IncludedResources is a slice of resource names
                          to include in the restore. If empty, all resources in the
                          backup are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      itemOperationTimeout:
                        description: ItemOperationTimeout specifies the time used
                          to wait for RestoreItemAction operations The default value
                          is 1 hour.
                        type: string
                      labelSelector:
                        description: LabelSelector is a metav1.LabelSelector to filter
                          with when restoring individual objects from the backup.
                          If empty or nil, all objects are included. Optional.
                        nullable: true
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      namespaceMapping:
                        additionalProperties:
                          type: string
                        description: NamespaceMapping is a map of source namespace
                          names to target namespace names to restore into. Any source
                          namespaces not included in the map will be restored into
                          namespaces of the same name.
                        type: object
                      orLabelSelectors:
                        description: OrLabelSelectors is list of metav1.LabelSelector
                          to filter with when restoring individual objects from the
                          backup. If multiple provided they will be joined by the
                          OR operator. LabelSelector as well as OrLabelSelectors cannot
                          co-exist in restore request, only one of them can be used
                        items:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        nullable: true
                        type: array
                      preserveNodePorts:
                        description: PreserveNodePorts specifies whether to restore
                          old nodePorts from backup.
                        nullable: true
                        type: boolean
                      resourceModifier:
                        description: ResourceModifier specifies the reference to JSON
                          resource patches that should be applied to resources before
                          restoration.
                        nullable: true
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                        x-kubernetes-map-type: atomic
                      restorePVs:
                        description: RestorePVs specifies whether to restore all included
                          PVs from snapshot
                        nullable: true
                        type: boolean
                      restoreStatus:
                        description: RestoreStatus specifies which resources we should
                          restore the status field. If nil, no objects are included.
                          Optional.
                        nullable: true
                        properties:
                          excludedResources:
                            description: ExcludedResources specifies the resources
                              to which will not restore the status.
                            items:
                              type: string
                            nullable: true
                            type: array
                          includedResources:
                            description: IncludedResources specifies the resources
                              to which will restore the status. If empty, it applies
                              to all resources.
                            items:
                              type: string
                            nullable: true
                            type: array
                        type: object
                      scheduleName:
                        description: ScheduleName is the unique name of the Velero
                          schedule to restore from. If specified, and BackupName is
                          empty, Velero will restore from the most recent successful
                          backup created from this schedule.
                        type: string
                    required:
                    - backupName
                    type: object
                required:
                - backup
                - restore
                type: object
              replicationSliceName:
                description: ReplicationSliceName is the name of the ReplicationSlice
                type: string
              resourcesToExclude:
                description: ResourcesToExclude is the list of resources to exclude
                  from the replication
                items:
                  type: string
                type: array
              resourcesToInclude:
                description: ResourcesToInclude is the list of resources to include
                  in the replication
                items:
                  type: string
                type: array
              restoreControl:
                description: RestoreControl is the control for restores
                type: string
              restoreFrequency:
                description: RestoreFrequency is the frequency of restores
                type: string
              storageClassMapping:
                description: 'TODO:: CHECK StorageClassMapping is the mapping of storage
                  classes'
                type: string
            required:
            - replicationSliceName
            type: object
          status:
            description: ReplicationJobConfigStatus defines the observed state of
              ReplicationJobConfig
            properties:
              backup:
                description: BackupStatus captures the current status of a Velero
                  backup.
                properties:
                  backupItemOperationsAttempted:
                    description: BackupItemOperationsAttempted is the total number
                      of attempted async BackupItemAction operations for this backup.
                    type: integer
                  backupItemOperationsCompleted:
                    description: BackupItemOperationsCompleted is the total number
                      of successfully completed async BackupItemAction operations
                      for this backup.
                    type: integer
                  backupItemOperationsFailed:
                    description: BackupItemOperationsFailed is the total number of
                      async BackupItemAction operations for this backup which ended
                      with an error.
                    type: integer
                  completionTimestamp:
                    description: CompletionTimestamp records the time a backup was
                      completed. Completion time is recorded even on failed backups.
                      Completion time is recorded before uploading the backup object.
                      The server's time is used for CompletionTimestamps
                    format: date-time
                    nullable: true
                    type: string
                  csiVolumeSnapshotsAttempted:
                    description: CSIVolumeSnapshotsAttempted is the total number of
                      attempted CSI VolumeSnapshots for this backup.
                    type: integer
                  csiVolumeSnapshotsCompleted:
                    description: CSIVolumeSnapshotsCompleted is the total number of
                      successfully completed CSI VolumeSnapshots for this backup.
                    type: integer
                  errors:
                    description: Errors is a count of all error messages that were
                      generated during execution of the backup.  The actual errors
                      are in the backup's log file in object storage.
                    type: integer
                  expiration:
                    description: Expiration is when this Backup is eligible for garbage-collection.
                    format: date-time
                    nullable: true
                    type: string
                  failureReason:
                    description: FailureReason is an error that caused the entire
                      backup to fail.
                    type: string
                  formatVersion:
                    description: FormatVersion is the backup format version, including
                      major, minor, and patch version.
                    type: string
                  phase:
                    description: Phase is the current state of the Backup.
                    enum:
                    - New
                    - FailedValidation
                    - InProgress
                    - WaitingForPluginOperations
                    - WaitingForPluginOperationsPartiallyFailed
                    - Finalizing
                    - FinalizingPartiallyFailed
                    - Completed
                    - PartiallyFailed
                    - Failed
                    - Deleting
                    type: string
                  progress:
                    description: Progress contains information about the backup's
                      execution progress. Note that this information is best-effort
                      only -- if Velero fails to update it during a backup for any
                      reason, it may be inaccurate/stale.
                    nullable: true
                    properties:
                      itemsBackedUp:
                        description: ItemsBackedUp is the number of items that have
                          actually been written to the backup tarball so far.
                        type: integer
                      totalItems:
                        description: TotalItems is the total number of items to be
                          backed up. This number may change throughout the execution
                          of the backup due to plugins that return additional related
                          items to back up, the velero.io/exclude-from-backup label,
                          and various other filters that happen as items are processed.
                        type: integer
                    type: object
                  startTimestamp:
                    description: StartTimestamp records the time a backup was started.
                      Separate from CreationTimestamp, since that value changes on
                      restores. The server's time is used for StartTimestamps
                    format: date-time
                    nullable: true
                    type: string
                  validationErrors:
                    description: ValidationErrors is a slice of all validation errors
                      (if applicable).
                    items:
                      type: string
                    nullable: true
                    type: array
                  version:
                    description: 'Version is the backup format major version. Deprecated:
                      Please see FormatVersion'
                    type: integer
                  volumeSnapshotsAttempted:
                    description: VolumeSnapshotsAttempted is the total number of attempted
                      volume snapshots for this backup.
                    type: integer
                  volumeSnapshotsCompleted:
                    description: VolumeSnapshotsCompleted is the total number of successfully
                      completed volume snapshots for this backup.
                    type: integer
                  warnings:
                    description: Warnings is a count of all warning messages that
                      were generated during execution of the backup. The actual warnings
                      are in the backup's log file in object storage.
                    type: integer
                type: object
              compatibilityChecks:
                items:
                  properties:
                    action:
                      type: string
                    compatibiltiyType:
                      type: string
                    description:
                      type: string
                    destination:
                      type: string
                    name:
                      type: string
                    purpose:
                      type: string
                    source:
                      type: string
                    status:
                      type: string
                    csiVolumeSnapshotsAttempted:
                      description: CSIVolumeSnapshotsAttempted is the total number of
                        attempted CSI VolumeSnapshots for this backup.
                      type: integer
                    csiVolumeSnapshotsCompleted:
                      description: CSIVolumeSnapshotsCompleted is the total number of
                        successfully completed CSI VolumeSnapshots for this backup.
                      type: integer
                    errors:
                      description: Errors is a count of all error messages that were
                        generated during execution of the backup.  The actual errors
                        are in the backup's log file in object storage.
                      type: integer
                    expiration:
                      description: Expiration is when this Backup is eligible for garbage-collection.
                      format: date-time
                      nullable: true
                      type: string
                    failureReason:
                      description: FailureReason is an error that caused the entire
                        backup to fail.
                      type: string
                    formatVersion:
                      description: FormatVersion is the backup format version, including
                        major, minor, and patch version.
                      type: string
                    phase:
                      description: Phase is the current state of the Backup.
                      enum:
                      - New
                      - FailedValidation
                      - InProgress
                      - WaitingForPluginOperations
                      - WaitingForPluginOperationsPartiallyFailed
                      - Finalizing
                      - FinalizingPartiallyFailed
                      - Completed
                      - PartiallyFailed
                      - Failed
                      - Deleting
                      type: string
                    progress:
                      description: Progress contains information about the backup's
                        execution progress. Note that this information is best-effort
                        only -- if Velero fails to update it during a backup for any
                        reason, it may be inaccurate/stale.
                      nullable: true
                      properties:
                        itemsBackedUp:
                          description: ItemsBackedUp is the number of items that have
                            actually been written to the backup tarball so far.
                          type: integer
                        totalItems:
                          description: TotalItems is the total number of items to be
                            backed up. This number may change throughout the execution
                            of the backup due to plugins that return additional related
                            items to back up, the velero.io/exclude-from-backup label,
                            and various other filters that happen as items are processed.
                          type: integer
                      type: object
                    startTimestamp:
                      description: StartTimestamp records the time a backup was started.
                        Separate from CreationTimestamp, since that value changes on
                        restores. The server's time is used for StartTimestamps
                      format: date-time
                      nullable: true
                      type: string
                    validationErrors:
                      description: ValidationErrors is a slice of all validation errors
                        (if applicable)
                      items:
                        type: string
                      nullable: true
                      type: array
                    version:
                      description: 'Version is the backup format major version. Deprecated:
                        Please see FormatVersion'
                      type: integer
                    volumeSnapshotsAttempted:
                      description: VolumeSnapshotsAttempted is the total number of attempted
                        volume snapshots for this backup.
                      type: integer
                    volumeSnapshotsCompleted:
                      description: VolumeSnapshotsCompleted is the total number of successfully
                        completed volume snapshots for this backup.
                      type: integer
                    warnings:
                      description: Warnings is a count of all warning messages that
                        were generated during execution of the backup. The actual warnings
                        are in the backup's log file in object storage.
                      type: integer
                  type: object
                type: array
              overallCompatibility:
                enum:
                - compatible
                - warning
                - not_compatible
                - fixable
                type: string
              restore:
                description: RestoreStatus captures the current status of a Velero
                  restore
                properties:
                  completionTimestamp:
                    description: CompletionTimestamp records the time the restore
                      operation was completed. Completion time is recorded even on
                      failed restore. The server's time is used for StartTimestamps
                    format: date-time
                    nullable: true
                    type: string
                  errors:
                    description: Errors is a count of all error messages that were
                      generated during execution of the restore. The actual errors
                      are stored in object storage.
                    type: integer
                  failureReason:
                    description: FailureReason is an error that caused the entire
                      restore to fail.
                    type: string
                  phase:
                    description: Phase is the current state of the Restore
                    enum:
                    - New
                    - FailedValidation
                    - InProgress
                    - WaitingForPluginOperations
                    - WaitingForPluginOperationsPartiallyFailed
                    - Completed
                    - PartiallyFailed
                    - Failed
                    type: string
                  progress:
                    description: Progress contains information about the restore's
                      execution progress. Note that this information is best-effort
                      only -- if Velero fails to update it during a restore for any
                      reason, it may be inaccurate/stale.
                    nullable: true
                    properties:
                      itemsRestored:
                        description: ItemsRestored is the number of items that have
                          actually been restored so far
                        type: integer
                      totalItems:
                        description: TotalItems is the total number of items to be
                          restored. This number may change throughout the execution
                          of the restore due to plugins that return additional related
                          items to restore
                        type: integer
                    type: object
                  restoreItemOperationsAttempted:
                    description: RestoreItemOperationsAttempted is the total number
                      of attempted async RestoreItemAction operations for this restore.
                    type: integer
                  restoreItemOperationsCompleted:
                    description: RestoreItemOperationsCompleted is the total number
                      of successfully completed async RestoreItemAction operations
                      for this restore.
                    type: integer
                  restoreItemOperationsFailed:
                    description: RestoreItemOperationsFailed is the total number of
                      async RestoreItemAction operations for this restore which ended
                      with an error.
                    type: integer
                  startTimestamp:
                    description: StartTimestamp records the time the restore operation
                      was started. The server's time is used for StartTimestamps
                    format: date-time
                    nullable: true
                    type: string
                  validationErrors:
                    description: ValidationErrors is a slice of all validation errors
                      (if applicable)
                    items:
                      type: string
                    nullable: true
                    type: array
                  warnings:
                    description: Warnings is a count of all warning messages that
                      were generated during execution of the restore. The actual warnings
                      are stored in object storage.
                    type: integer
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: replicationslice.controller.kubeslice.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kubeslice-controller-webhook-service
          namespace: kubeslice-controller
          path: /convert
      conversionReviewVersions:
        - v1
  group: controller.kubeslice.io
  names:
    kind: ReplicationSlice
    listKind: ReplicationSliceList
    plural: replicationslice
    singular: replicationslice
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ReplicationSlice is the Schema for the replicationslices API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ReplicationSliceSpec defines the desired state of ReplicationSlice
              properties:
                destinationCluster:
                  description: DestinationCluster is the name of the destination cluster for the replication slice
                  type: string
                replicationType:
                  description: ReplicationType is the type of replication
                  type: string
                minIOBucketName:
                  description: MinIOBucketName is the name of the MinIO bucket
                  type: string
                sourceCluster:
                  description: SourceCluster is the name of the source cluster for the replication slice
                  type: string
              required:
                - destinationCluster
                - sourceCluster
              type: object
            status:
              description: ReplicationSliceStatus defines the observed state of ReplicationSlice
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: projects.controller.kubeslice.io
spec:
  group: controller.kubeslice.io
  names:
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Project is the Schema for the projects API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ProjectSpec defines the desired state of Project
              properties:
                serviceAccount:
                  description: ServiceAccount is a field of Project. Edit project_types.go to remove/update
                  properties:
                    readOnly:
                      items:
                        type: string
                      type: array
                    readWrite:
                      items:
                        type: string
                      type: array
                  type: object
              type: object
            status:
              description: ProjectStatus defines the observed state of Project
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: serviceexportconfigs.controller.kubeslice.io
spec:
  group: controller.kubeslice.io
  names:
    kind: ServiceExportConfig
    listKind: ServiceExportConfigList
    plural: serviceexportconfigs
    singular: serviceexportconfig
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceExportConfig is the Schema for the serviceexportconfigs
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceExportConfigSpec defines the desired state of ServiceExportConfig
              properties:
                aliases:
                  description: Alias names for the exported service. The service could
                    be addressed by the alias names in addition to the slice.local name.
                  items:
                    type: string
                  type: array
                serviceDiscoveryEndpoints:
                  description: the service discovery endpoint array
                  items:
                    properties:
                      cluster:
                        description: The ID of the cluster.
                        type: string
                      dnsName:
                        description: the dns_name of the service
                        type: string
                      nsmIp:
                        description: The NSM IP address.
                        type: string
                      podName:
                        description: The name of the pod.
                        type: string
                      port:
                        description: port of the service
                        format: int32
                        type: integer
                    type: object
                  type: array
                serviceDiscoveryPorts:
                  description: The ports for the given service.
                  items:
                    properties:
                      name:
                        description: The name of the port.
                        type: string
                      port:
                        description: The target port number.
                        format: int32
                        type: integer
                      protocol:
                        description: The protocol.
                        type: string
                      servicePort:
                        description: The port exposed by service
                        format: int32
                        type: integer
                      serviceProtocol:
                        description: The service protocol
                        type: string
                    type: object
                  type: array
                serviceName:
                  description: ServiceName is the name of the service
                  type: string
                serviceNamespace:
                  type: string
                sliceName:
                  description: The name of the slice.
                  type: string
                sourceCluster:
                  description: clusterId is the id of the cluster where the service
                    is available.
                  type: string
              required:
              - serviceName
              - sliceName
              - sourceCluster
              type: object
            status:
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: sliceconfigs.controller.kubeslice.io
spec:
  group: controller.kubeslice.io
  names:
    kind: SliceConfig
    listKind: SliceConfigList
    plural: sliceconfigs
    singular: sliceconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SliceConfig is the Schema for the sliceconfig API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SliceConfigSpec defines the desired state of SliceConfig
            properties:
              clusters:
                items:
                  type: string
                type: array
              externalGatewayConfig:
                items:
                  description: ExternalGatewayConfig is the configuration for external
                    gateways like 'istio', etc/
                  properties:
                    clusters:
                      items:
                        type: string
                      type: array
                    egress:
                      properties:
                        enabled:
                          type: boolean
                      type: object
                    gatewayType:
                      enum:
                      - none
                      - istio
                      - envoy
                      type: string
                    ingress:
                      properties:
                        enabled:
                          type: boolean
                      type: object
                    nsIngress:
                      properties:
                        enabled:
                          type: boolean
                      type: object
                    vpcServiceAccess:
                      properties:
                        egress:
                          properties:
                            enabled:
                              type: boolean
                          type: object
                        ingress:
                          properties:
                            enabled:
                              type: boolean
                          type: object
                      type: object
                  type: object
                type: array
              maxClusters:
                default: 16
                maximum: 32
                minimum: 2
                type: integer
              namespaceIsolationProfile:
                properties:
                  allowedNamespaces:
                    items:
                      properties:
                        clusters:
                          items:
                            type: string
                          type: array
                        namespace:
                          type: string
                      type: object
                    type: array
                  applicationNamespaces:
                    items:
                      properties:
                        clusters:
                          items:
                            type: string
                          type: array
                        namespace:
                          type: string
                      type: object
                    type: array
                  isolationEnabled:
                    default: false
                    type: boolean
                type: object
              overlayNetworkDeploymentMode:
                default: single-network
                enum:
                - single-network
                - multi-network
                - no-network
                type: string
              qosProfileDetails:
                description: The custom QOS Profile Details
                properties:
                  bandwidthCeilingKbps:
                    type: integer
                  bandwidthGuaranteedKbps:
                    type: integer
                  dscpClass:
                    enum:
                    - Default
                    - AF11
                    - AF12
                    - AF13
                    - AF21
                    - AF22
                    - AF23
                    - AF31
                    - AF32
                    - AF33
                    - AF41
                    - AF42
                    - AF43
                    - EF
                    type: string
                  priority:
                    type: integer
                  queueType:
                    default: HTB
                    type: string
                  tcType:
                    default: BANDWIDTH_CONTROL
                    type: string
                required:
                - bandwidthCeilingKbps
                - bandwidthGuaranteedKbps
                - dscpClass
                - priority
                - queueType
                - tcType
                type: object
              renewBefore:
                description: RenewBefore is used for renew now!
                format: date-time
                type: string
              rotationInterval:
                default: 30
                maximum: 90
                minimum: 30
                type: integer
              sliceGatewayProvider:
                description: WorkerSliceGatewayProvider defines the configuration
                  for slicegateway
                properties:
                  sliceCaType:
                    default: Local
                    type: string
                  sliceGatewayServiceType:
                    items:
                      properties:
                        cluster:
                          type: string
                        protocol:
                          default: UDP
                          enum:
                          - TCP
                          - UDP
                          type: string
                        type:
                          default: NodePort
                          enum:
                          - NodePort
                          - LoadBalancer
                          type: string
                      required:
                      - cluster
                      - protocol
                      - type
                      type: object
                    type: array
                  sliceGatewayType:
                    default: OpenVPN
                    type: string
                required:
                - sliceCaType
                - sliceGatewayType
                type: object
              sliceIpamType:
                default: Local
                type: string
              sliceSubnet:
                type: string
              sliceType:
                default: Application
                type: string
              standardQosProfileName:
                type: string
              vpnConfig:
                description: VPNConfiguration defines the additional (optional) VPN
                  Configuration to customise
                properties:
                  cipher:
                    default: AES-256-CBC
                    enum:
                    - AES-256-CBC
                    - AES-128-CBC
                    type: string
                required:
                - cipher
                type: object
            required:
            - maxClusters
            type: object
          status:
            description: SliceConfigStatus defines the observed state of SliceConfig
            properties:
              kubesliceEvents:
                items:
                  properties:
                    action:
                      description: Trigger action. Examples - CLUSTER_OFFBOARDING,
                        NAMESPCE_OFFBOARDING etc
                      type: string
                    components:
                      description: list of effected components on which action failed
                      items:
                        type: string
                      type: array
                    event:
                      description: Event name (from monitoring framework schema)
                      type: string
                    identifier:
                      description: Identifier of the component for which the action
                        was triggered
                      type: string
                    isEventRaised:
                      default: false
                      description: Flag to determine if kubernetes event is already
                        raised
                      type: boolean
                    reason:
                      description: Reason message for the event
                      type: string
                    timestamp:
                      description: Timestamp of the event
                      format: date-time
                      type: string
                    type:
                      description: Type of the event. Can be one of Error, Success
                        or InProgress
                      type: string
                  required:
                  - event
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: slicenodeaffinities.controller.kubeslice.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kubeslice-controller-webhook-service
          namespace: kubeslice-controller
          path: /convert
      conversionReviewVersions:
        - v1
  group: controller.kubeslice.io
  names:
    kind: SliceNodeAffinity
    listKind: SliceNodeAffinityList
    plural: slicenodeaffinities
    singular: slicenodeaffinity
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SliceNodeAffinity is the Schema for the slicenodeaffinities API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SliceNodeAffinitySpec defines the desired state of SliceNodeAffinity
              properties:
                nodeAffinityProfiles:
                  description: NodeAffinityProfiles defines the node affinity profile for the slice
                  items:
                    properties:
                      cluster:
                        description: Cluster is the cluster in the slice this rule applies to
                        type: string
                      nodeAffinityRules:
                        description: NodeAffinityRules defines the node affinity profile for the slice
                        items:
                          properties:
                            namespace:
                              description: Namespace is the namespace in the slice this rule applies to
                              type: string
                            nodeSelectorLabels:
                              description: NodeSelectorLabels defines the label selectors to select nodes for assigning to pods
                              items:
                                description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  type: array
              type: object
            status:
              description: SliceNodeAffinityStatus defines the observed state of SliceNodeAffinity
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: sliceqosconfigs.controller.kubeslice.io
spec:
  group: controller.kubeslice.io
  names:
    kind: SliceQoSConfig
    listKind: SliceQoSConfigList
    plural: sliceqosconfigs
    singular: sliceqosconfig
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SliceQoSConfig is the Schema for the sliceqosconfigs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SliceQoSConfigSpec defines the desired state of SliceQoSConfig
              properties:
                bandwidthCeilingKbps:
                  type: integer
                bandwidthGuaranteedKbps:
                  type: integer
                dscpClass:
                  enum:
                    - Default
                    - AF11
                    - AF12
                    - AF13
                    - AF21
                    - AF22
                    - AF23
                    - AF31
                    - AF32
                    - AF33
                    - AF41
                    - AF42
                    - AF43
                    - EF
                  type: string
                priority:
                  type: integer
                queueType:
                  enum:
                    - HTB
                  type: string
                tcType:
                  enum:
                    - BANDWIDTH_CONTROL
                  type: string
              required:
                - bandwidthCeilingKbps
                - bandwidthGuaranteedKbps
                - dscpClass
                - priority
                - queueType
                - tcType
              type: object
            status:
              description: SliceQoSConfigStatus defines the observed state of SliceQoSConfig
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: sliceresourcequotaconfigs.controller.kubeslice.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kubeslice-controller-webhook-service
          namespace: kubeslice-controller
          path: /convert
      conversionReviewVersions:
        - v1
  group: controller.kubeslice.io
  names:
    kind: SliceResourceQuotaConfig
    listKind: SliceResourceQuotaConfigList
    plural: sliceresourcequotaconfigs
    singular: sliceresourcequotaconfig
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SliceResourceQuotaConfig is the Schema for the sliceresourcequotaconfigs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SliceResourceQuotaConfigSpec defines the desired state of SliceResourceQuotaConfig
              properties:
                clusterQuota:
                  description: ClusterQuota defines the configuration for cluster quota of a resource quota
                  items:
                    description: ClusterQuota defines the configuration for cluster quota of a resource quota
                    properties:
                      clusterName:
                        description: ClusterName defines the name of the cluster in ClusterQuota
                        type: string
                      namespaceQuota:
                        description: NamespaceQuota defines the configuration for namespace quota of a ClusterQuota
                        items:
                          description: NamespaceQuota defines the configuration for namespace quota of a NamespaceQuota
                          properties:
                            enforceQuota:
                              default: false
                              description: EnforceQuota defines the enforceQuota status flag for NamespaceQuota
                              type: boolean
                            namespace:
                              description: Namespace defines the namespace of the NamespaceQuota
                              type: string
                            resources:
                              description: Resources defines the configuration for resources for NamespaceQuota
                              properties:
                                defaultLimitPerContainer:
                                  properties:
                                    cpu:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: CPU in cores. (500m = .5 cores)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    ephemeralStorage:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    memory:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                defaultRequestPerContainer:
                                  properties:
                                    cpu:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: CPU in cores. (500m = .5 cores)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    ephemeralStorage:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    memory:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                limit:
                                  description: LimitResourceList is a set of (resource name, quantity) pairs.
                                  properties:
                                    cpu:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: CPU in cores. (500m = .5 cores)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    ephemeralStorage:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    memory:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    podCount:
                                      description: PodCount in number.
                                      format: int64
                                      type: integer
                                  type: object
                                request:
                                  description: RequestResourceList is a set of (resource name, quantity) pairs.
                                  properties:
                                    cpu:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: CPU in cores. (500m = .5 cores)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    ephemeralStorage:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    memory:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                              type: object
                          type: object
                        type: array
                      resources:
                        description: Resources defines the configuration for resources for ClusterQuota
                        properties:
                          limit:
                            description: LimitResourceList is a set of (resource name, quantity) pairs.
                            properties:
                              cpu:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: CPU in cores. (500m = .5 cores)
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              ephemeralStorage:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              memory:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              podCount:
                                description: PodCount in number.
                                format: int64
                                type: integer
                            type: object
                          request:
                            description: RequestResourceList is a set of (resource name, quantity) pairs.
                            properties:
                              cpu:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: CPU in cores. (500m = .5 cores)
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              ephemeralStorage:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              memory:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                        type: object
                    type: object
                  type: array
                sliceQuota:
                  description: SliceQuota defines the configuration for slice quota of a resource quota
                  properties:
                    resources:
                      description: Resources defines the configuration for resources for SliceQuota
                      properties:
                        defaultRequestPerContainer:
                          properties:
                            cpu:
                              anyOf:
                                - type: integer
                                - type: string
                              description: CPU in cores. (500m = .5 cores)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            ephemeralStorage:
                              anyOf:
                                - type: integer
                                - type: string
                              description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            memory:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        limit:
                          description: LimitResourceList is a set of (resource name, quantity) pairs.
                          properties:
                            cpu:
                              anyOf:
                                - type: integer
                                - type: string
                              description: CPU in cores. (500m = .5 cores)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            ephemeralStorage:
                              anyOf:
                                - type: integer
                                - type: string
                              description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            memory:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            podCount:
                              description: PodCount in number.
                              format: int64
                              type: integer
                          type: object
                        request:
                          description: RequestResourceList is a set of (resource name, quantity) pairs.
                          properties:
                            cpu:
                              anyOf:
                                - type: integer
                                - type: string
                              description: CPU in cores. (500m = .5 cores)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            ephemeralStorage:
                              anyOf:
                                - type: integer
                                - type: string
                              description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            memory:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                      type: object
                  type: object
              type: object
            status:
              description: SliceResourceQuotaConfigStatus defines the observed state of SliceResourceQuotaConfig
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: slicerolebindings.controller.kubeslice.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kubeslice-controller-webhook-service
          namespace: kubeslice-controller
          path: /convert
      conversionReviewVersions:
        - v1
  group: controller.kubeslice.io
  names:
    kind: SliceRoleBinding
    listKind: SliceRoleBindingList
    plural: slicerolebindings
    singular: slicerolebinding
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SliceRoleBinding is the Schema for the slicerolebindings API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            bindings:
              items:
                description: RoleBinding references a role, but does not contain it.
                properties:
                  applyTo:
                    description: ApplyTo contains information about the namespace and the Subjects.
                    items:
                      description: ApplyTo contains information about the namespace and the Subjects. It adds who information via Subjects and namespace information by which namespace it exists in.
                      properties:
                        cluster:
                          description: '''*'' Represents all clusters'
                          type: string
                        namespace:
                          description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                          type: string
                        subjects:
                          description: Subjects holds references to the objects the role applies to.
                          items:
                            description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                            properties:
                              apiGroup:
                                description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                type: string
                              kind:
                                description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                type: string
                              name:
                                description: Name of the object being referenced.
                                type: string
                              namespace:
                                description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                type: string
                            required:
                              - kind
                              - name
                            type: object
                            x-kubernetes-map-type: atomic
                          type: array
                      type: object
                    type: array
                  roleRef:
                    description: RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                      - apiVersion
                      - kind
                      - name
                    type: object
                type: object
              type: array
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              properties:
                roleRefConditions:
                  items:
                    properties:
                      cluster:
                        description: Name of the Cluster
                        type: string
                      condition:
                        description: Condition defines conditions of a RoleRef, one of INVALID_NS, NOT_ACCESSIBLE, INVALID_RULE, INVALID_ROLE_BINDING.
                        type: string
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human-readable message indicating details about the transition.
                        type: string
                      namespace:
                        description: Name of the Namespace in case of INVALID_NS condition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      roleRef:
                        description: Name, APIVersion and Kind of the RoleRef
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                          - apiVersion
                          - kind
                          - name
                        type: object
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                    required:
                      - condition
                      - lastUpdateTime
                      - reason
                      - roleRef
                      - status
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: sliceroletemplates.controller.kubeslice.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kubeslice-controller-webhook-service
          namespace: kubeslice-controller
          path: /convert
      conversionReviewVersions:
        - v1
  group: controller.kubeslice.io
  names:
    kind: SliceRoleTemplate
    listKind: SliceRoleTemplateList
    plural: sliceroletemplates
    singular: sliceroletemplate
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SliceRoleTemplate is the Schema for the sliceroletemplates API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            rules:
              items:
                description: PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
                properties:
                  apiGroups:
                    description: APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                    items:
                      type: string
                    type: array
                  nonResourceURLs:
                    description: NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                    items:
                      type: string
                    type: array
                  resourceNames:
                    description: ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
                    items:
                      type: string
                    type: array
                  resources:
                    description: Resources is a list of resources this rule applies to. '*' represents all resources.
                    items:
                      type: string
                    type: array
                  verbs:
                    description: Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.
                    items:
                      type: string
                    type: array
                required:
                  - verbs
                type: object
              type: array
            status:
              description: SliceRoleTemplateStatus defines the observed state of SliceResourceQuotaConfig
              type: object
          required:
            - rules
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: vpnkeyrotations.controller.kubeslice.io
spec:
  group: controller.kubeslice.io
  names:
    kind: VpnKeyRotation
    listKind: VpnKeyRotationList
    plural: vpnkeyrotations
    singular: vpnkeyrotation
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: VpnKeyRotation is the Schema for the vpnkeyrotations API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: VpnKeyRotationSpec defines the desired state of VpnKeyRotation
              properties:
                certificateCreationTime:
                  description: CertificateCreationTime is a time when certificate for all the gateway pairs is created/updated
                  format: date-time
                  type: string
                certificateExpiryTime:
                  description: CertificateExpiryTime is a time when certificate for all the gateway pairs will expire
                  format: date-time
                  type: string
                clusterGatewayMapping:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: ClusterGatewayMapping represents a map where key is cluster name and value is array of gateways present on that cluster. This is used to avoid unnecessary reconciliation in worker-operator.
                  type: object
                clusters:
                  description: clusters contains the list of clusters attached to this slice
                  items:
                    type: string
                  type: array
                rotationCount:
                  description: RotationCount represent the number of times rotation has been already performed.
                  type: integer
                rotationInterval:
                  type: integer
                sliceName:
                  type: string
              type: object
            status:
              description: VpnKeyRotationStatus defines the observed state of VpnKeyRotation
              properties:
                currentRotationState:
                  additionalProperties:
                    description: StatusOfKeyRotation represent per gateway status
                    properties:
                      lastUpdatedTimestamp:
                        format: date-time
                        type: string
                      status:
                        type: string
                    type: object
                  description: This is map of gateway name to the current rotation state
                  type: object
                statusHistory:
                  additionalProperties:
                    items:
                      description: StatusOfKeyRotation represent per gateway status
                      properties:
                        lastUpdatedTimestamp:
                          format: date-time
                          type: string
                        status:
                          type: string
                      type: object
                    type: array
                  description: This is circular array of last n number of rotation status.
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: workersliceappserviceresourceusages.worker.kubeslice.io
spec:
  group: worker.kubeslice.io
  names:
    kind: WorkerSliceAppServiceResourceUsage
    listKind: WorkerSliceAppServiceResourceUsageList
    plural: workersliceappserviceresourceusages
    singular: workersliceappserviceresourceusage
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: WorkerSliceAppServiceResourceUsage is the Schema for the workersliceappserviceresourceusages
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkerSliceAppServiceResourceUsageSpec defines the desired
              state of WorkerSliceAppServiceResourceUsage
            type: object
          status:
            description: WorkerSliceAppServiceResourceUsageStatus defines the observed
              state of WorkerSliceAppServiceResourceUsage
            properties:
              applicationServices:
                description: List of application services
                items:
                  properties:
                    namespaceName:
                      description: Name of the application namespace
                      type: string
                    resourceConfiguration:
                      description: Resource configuration of the service
                      properties:
                        limits:
                          properties:
                            cpu:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            memory:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        requests:
                          properties:
                            cpu:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            memory:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        resourceUtilization:
                          properties:
                            networkResources:
                              properties:
                                loadBalancer:
                                  properties:
                                    properties:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    protocol:
                                      description: Type of the protocol <TCP, UDP,
                                        TCP and UDP>
                                      type: string
                                    type:
                                      description: Type of the loadbalancer
                                      type: string
                                  type: object
                              type: object
                            nodeResources:
                              items:
                                properties:
                                  cpu:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: CPU utilization of the pods in the
                                      application namespace
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  cpuRequest:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: CPU request of the pods in the application
                                      namespace
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  memory:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Memory utilization of the pods in
                                      the application namespace
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  nodeName:
                                    description: Name of the Node
                                    type: string
                                  nodeType:
                                    description: Type of the Node
                                    type: string
                                type: object
                              type: array
                            persistentVolumeResources:
                              items:
                                properties:
                                  pvClaimIdentifier:
                                    type: string
                                  pvInfo:
                                    properties:
                                      pvIdentifier:
                                        type: string
                                      pvType:
                                        type: string
                                      storage:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Resource utilization of the PV
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      storageClassName:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                      required:
                      - resourceUtilization
                      type: object
                    serviceName:
                      description: Name of the service in the application namespace
                      type: string
                    workloadNames:
                      description: List of workloads associated with the service
                      items:
                        properties:
                          type:
                            description: Type of the workload
                            type: string
                          workloadName:
                            description: Name of the workload
                            type: string
                        type: object
                      type: array
                  required:
                  - namespaceName
                  - resourceConfiguration
                  - serviceName
                  type: object
                type: array
              ingressResources:
                description: List of ingress resources
                items:
                  properties:
                    loadBalancer:
                      description: LoadBalancer configuration of the ingress resource
                      properties:
                        properties:
                          additionalProperties:
                            type: string
                          type: object
                        protocol:
                          description: Type of the protocol <TCP, UDP, TCP and UDP>
                          type: string
                        type:
                          description: Type of the loadbalancer
                          type: string
                      type: object
                    name:
                      description: Name of the ingress resource
                      type: string
                    namespace:
                      description: Namespace of the ingress resource
                      type: string
                  type: object
                type: array
              lastUpdatedTimestamp:
                description: Timestamp of the last update
                format: date-time
                type: string
              reservedNodes:
                description: List of reserved nodes for particular namespace
                items:
                  properties:
                    namespace:
                      type: string
                    nodeDetails:
                      items:
                        properties:
                          nodeName:
                            type: string
                          nodeType:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
            required:
            - applicationServices
            - lastUpdatedTimestamp
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: workerreplicationjobconfigs.worker.kubeslice.io
spec:
  group: worker.kubeslice.io
  names:
    kind: WorkerReplicationJobConfig
    listKind: WorkerReplicationJobConfigList
    plural: workerreplicationjobconfigs
    singular: workerreplicationjobconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: WorkerReplicationJobConfig is the Schema for the workerreplicationjobconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkerReplicationJobConfigSpec defines the desired state
              of WorkerReplicationJobConfig
            properties:
              action:
                description: Action states whether the replication job config is for
                  backup or restore.
                type: string
              clusterName:
                description: ClusterName defines the name of the cluster for the WorkerReplicationSlice
                type: string
              overallCompatibility:
                enum:
                - compatible
                - warning
                - not_compatible
                - fixable
                type: string
              preCheckFlag:
                enum:
                - ignorePrechecks
                - stopOnPrecheck
                - reRunPrecheck
                type: string
              rawSpec:
                description: RawSpec contains the Velero backup and restore specs
                properties:
                  backup:
                    description: Backup is the velero backup specs
                    properties:
                      csiSnapshotTimeout:
                        description: CSISnapshotTimeout specifies the time used to
                          wait for CSI VolumeSnapshot status turns to ReadyToUse during
                          creation, before returning error as timeout. The default
                          value is 10 minute.
                        type: string
                      datamover:
                        description: DataMover specifies the data mover to be used
                          by the backup. If DataMover is "" or "velero", the built-in
                          data mover will be used.
                        type: string
                      defaultVolumesToFsBackup:
                        description: DefaultVolumesToFsBackup specifies whether pod
                          volume file system backup should be used for all volumes
                          by default.
                        nullable: true
                        type: boolean
                      defaultVolumesToRestic:
                        description: "DefaultVolumesToRestic specifies whether restic
                          should be used to take a backup of all pod volumes by default.
                          \n Deprecated: this field is no longer used and will be
                          removed entirely in future. Use DefaultVolumesToFsBackup
                          instead."
                        nullable: true
                        type: boolean
                      excludedClusterScopedResources:
                        description: ExcludedClusterScopedResources is a slice of
                          cluster-scoped resource type names to exclude from the backup.
                          If set to "*", all cluster-scoped resource types are excluded.
                          The default value is empty.
                        items:
                          type: string
                        nullable: true
                        type: array
                      excludedNamespaceScopedResources:
                        description: ExcludedNamespaceScopedResources is a slice of
                          namespace-scoped resource type names to exclude from the
                          backup. If set to "*", all namespace-scoped resource types
                          are excluded. The default value is empty.
                        items:
                          type: string
                        nullable: true
                        type: array
                      excludedNamespaces:
                        description: ExcludedNamespaces contains a list of namespaces
                          that are not included in the backup.
                        items:
                          type: string
                        nullable: true
                        type: array
                      excludedResources:
                        description: ExcludedResources is a slice of resource names
                          that are not included in the backup.
                        items:
                          type: string
                        nullable: true
                        type: array
                      hooks:
                        description: Hooks represent custom behaviors that should
                          be executed at different phases of the backup.
                        properties:
                          resources:
                            description: Resources are hooks that should be executed
                              when backing up individual instances of a resource.
                            items:
                              description: BackupResourceHookSpec defines one or more
                                BackupResourceHooks that should be executed based
                                on the rules defined for namespaces, resources, and
                                label selector.
                              properties:
                                excludedNamespaces:
                                  description: ExcludedNamespaces specifies the namespaces
                                    to which this hook spec does not apply.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                excludedResources:
                                  description: ExcludedResources specifies the resources
                                    to which this hook spec does not apply.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                includedNamespaces:
                                  description: IncludedNamespaces specifies the namespaces
                                    to which this hook spec applies. If empty, it
                                    applies to all namespaces.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                includedResources:
                                  description: IncludedResources specifies the resources
                                    to which this hook spec applies. If empty, it
                                    applies to all resources.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                labelSelector:
                                  description: LabelSelector, if specified, filters
                                    the resources to which this hook spec applies.
                                  nullable: true
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                name:
                                  description: Name is the name of this hook.
                                  type: string
                                post:
                                  description: PostHooks is a list of BackupResourceHooks
                                    to execute after storing the item in the backup.
                                    These are executed after all "additional items"
                                    from item actions are processed.
                                  items:
                                    description: BackupResourceHook defines a hook
                                      for a resource.
                                    properties:
                                      exec:
                                        description: Exec defines an exec hook.
                                        properties:
                                          command:
                                            description: Command is the command and
                                              arguments to execute.
                                            items:
                                              type: string
                                            minItems: 1
                                            type: array
                                          container:
                                            description: Container is the container
                                              in the pod where the command should
                                              be executed. If not specified, the pod's
                                              first container is used.
                                            type: string
                                          onError:
                                            description: OnError specifies how Velero
                                              should behave if it encounters an error
                                              executing this hook.
                                            enum:
                                            - Continue
                                            - Fail
                                            type: string
                                          timeout:
                                            description: Timeout defines the maximum
                                              amount of time Velero should wait for
                                              the hook to complete before considering
                                              the execution a failure.
                                            type: string
                                        required:
                                        - command
                                        type: object
                                    required:
                                    - exec
                                    type: object
                                  type: array
                                pre:
                                  description: PreHooks is a list of BackupResourceHooks
                                    to execute prior to storing the item in the backup.
                                    These are executed before any "additional items"
                                    from item actions are processed.
                                  items:
                                    description: BackupResourceHook defines a hook
                                      for a resource.
                                    properties:
                                      exec:
                                        description: Exec defines an exec hook.
                                        properties:
                                          command:
                                            description: Command is the command and
                                              arguments to execute.
                                            items:
                                              type: string
                                            minItems: 1
                                            type: array
                                          container:
                                            description: Container is the container
                                              in the pod where the command should
                                              be executed. If not specified, the pod's
                                              first container is used.
                                            type: string
                                          onError:
                                            description: OnError specifies how Velero
                                              should behave if it encounters an error
                                              executing this hook.
                                            enum:
                                            - Continue
                                            - Fail
                                            type: string
                                          timeout:
                                            description: Timeout defines the maximum
                                              amount of time Velero should wait for
                                              the hook to complete before considering
                                              the execution a failure.
                                            type: string
                                        required:
                                        - command
                                        type: object
                                    required:
                                    - exec
                                    type: object
                                  type: array
                              required:
                              - name
                              type: object
                            nullable: true
                            type: array
                        type: object
                      includeClusterResources:
                        description: IncludeClusterResources specifies whether cluster-scoped
                          resources should be included for consideration in the backup.
                        nullable: true
                        type: boolean
                      includedClusterScopedResources:
                        description: IncludedClusterScopedResources is a slice of
                          cluster-scoped resource type names to include in the backup.
                          If set to "*", all cluster-scoped resource types are included.
                          The default value is empty, which means only related cluster-scoped
                          resources are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      includedNamespaceScopedResources:
                        description: IncludedNamespaceScopedResources is a slice of
                          namespace-scoped resource type names to include in the backup.
                          The default value is "*".
                        items:
                          type: string
                        nullable: true
                        type: array
                      includedNamespaces:
                        description: IncludedNamespaces is a slice of namespace names
                          to include objects from. If empty, all namespaces are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      includedResources:
                        description: IncludedResources is a slice of resource names
                          to include in the backup. If empty, all resources are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      itemOperationTimeout:
                        description: ItemOperationTimeout specifies the time used
                          to wait for asynchronous BackupItemAction operations The
                          default value is 1 hour.
                        type: string
                      labelSelector:
                        description: LabelSelector is a metav1.LabelSelector to filter
                          with when adding individual objects to the backup. If empty
                          or nil, all objects are included. Optional.
                        nullable: true
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      metadata:
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      orLabelSelectors:
                        description: OrLabelSelectors is list of metav1.LabelSelector
                          to filter with when adding individual objects to the backup.
                          If multiple provided they will be joined by the OR operator.
                          LabelSelector as well as OrLabelSelectors cannot co-exist
                          in backup request, only one of them can be used.
                        items:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        nullable: true
                        type: array
                      orderedResources:
                        additionalProperties:
                          type: string
                        description: OrderedResources specifies the backup order of
                          resources of specific Kind. The map key is the resource
                          name and value is a list of object names separated by commas.
                          Each resource name has format "namespace/objectname".  For
                          cluster resources, simply use "objectname".
                        nullable: true
                        type: object
                      resourcePolicy:
                        description: ResourcePolicy specifies the referenced resource
                          policies that backup should follow
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                        x-kubernetes-map-type: atomic
                      snapshotMoveData:
                        description: SnapshotMoveData specifies whether snapshot data
                          should be moved
                        nullable: true
                        type: boolean
                      snapshotVolumes:
                        description: SnapshotVolumes specifies whether to take snapshots
                          of any PV's referenced in the set of objects included in
                          the Backup.
                        nullable: true
                        type: boolean
                      storageLocation:
                        description: StorageLocation is a string containing the name
                          of a BackupStorageLocation where the backup should be stored.
                        type: string
                      ttl:
                        description: TTL is a time.Duration-parseable string describing
                          how long the Backup should be retained for.
                        type: string
                      volumeSnapshotLocations:
                        description: VolumeSnapshotLocations is a list containing
                          names of VolumeSnapshotLocations associated with this backup.
                        items:
                          type: string
                        type: array
                    type: object
                  restore:
                    description: Restore is the Velero restore specs
                    properties:
                      backupName:
                        description: BackupName is the unique name of the Velero backup
                          to restore from.
                        type: string
                      excludedNamespaces:
                        description: ExcludedNamespaces contains a list of namespaces
                          that are not included in the restore.
                        items:
                          type: string
                        nullable: true
                        type: array
                      excludedResources:
                        description: ExcludedResources is a slice of resource names
                          that are not included in the restore.
                        items:
                          type: string
                        nullable: true
                        type: array
                      existingResourcePolicy:
                        description: ExistingResourcePolicy specifies the restore
                          behavior for the Kubernetes resource to be restored
                        nullable: true
                        type: string
                      hooks:
                        description: Hooks represent custom behaviors that should
                          be executed during or post restore.
                        properties:
                          resources:
                            items:
                              description: RestoreResourceHookSpec defines one or
                                more RestoreResrouceHooks that should be executed
                                based on the rules defined for namespaces, resources,
                                and label selector.
                              properties:
                                excludedNamespaces:
                                  description: ExcludedNamespaces specifies the namespaces
                                    to which this hook spec does not apply.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                excludedResources:
                                  description: ExcludedResources specifies the resources
                                    to which this hook spec does not apply.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                includedNamespaces:
                                  description: IncludedNamespaces specifies the namespaces
                                    to which this hook spec applies. If empty, it
                                    applies to all namespaces.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                includedResources:
                                  description: IncludedResources specifies the resources
                                    to which this hook spec applies. If empty, it
                                    applies to all resources.
                                  items:
                                    type: string
                                  nullable: true
                                  type: array
                                labelSelector:
                                  description: LabelSelector, if specified, filters
                                    the resources to which this hook spec applies.
                                  nullable: true
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                name:
                                  description: Name is the name of this hook.
                                  type: string
                                postHooks:
                                  description: PostHooks is a list of RestoreResourceHooks
                                    to execute during and after restoring a resource.
                                  items:
                                    description: RestoreResourceHook defines a restore
                                      hook for a resource.
                                    properties:
                                      exec:
                                        description: Exec defines an exec restore
                                          hook.
                                        properties:
                                          command:
                                            description: Command is the command and
                                              arguments to execute from within a container
                                              after a pod has been restored.
                                            items:
                                              type: string
                                            minItems: 1
                                            type: array
                                          container:
                                            description: Container is the container
                                              in the pod where the command should
                                              be executed. If not specified, the pod's
                                              first container is used.
                                            type: string
                                          execTimeout:
                                            description: ExecTimeout defines the maximum
                                              amount of time Velero should wait for
                                              the hook to complete before considering
                                              the execution a failure.
                                            type: string
                                          onError:
                                            description: OnError specifies how Velero
                                              should behave if it encounters an error
                                              executing this hook.
                                            enum:
                                            - Continue
                                            - Fail
                                            type: string
                                          waitForReady:
                                            description: WaitForReady ensures command
                                              will be launched when container is Ready
                                              instead of Running.
                                            nullable: true
                                            type: boolean
                                          waitTimeout:
                                            description: WaitTimeout defines the maximum
                                              amount of time Velero should wait for
                                              the container to be Ready before attempting
                                              to run the command.
                                            type: string
                                        required:
                                        - command
                                        type: object
                                      init:
                                        description: Init defines an init restore
                                          hook.
                                        properties:
                                          initContainers:
                                            description: InitContainers is list of
                                              init containers to be added to a pod
                                              during its restore.
                                            items:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            type: array
                                            x-kubernetes-preserve-unknown-fields: true
                                          timeout:
                                            description: Timeout defines the maximum
                                              amount of time Velero should wait for
                                              the initContainers to complete.
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      includeClusterResources:
                        description: IncludeClusterResources specifies whether cluster-scoped
                          resources should be included for consideration in the restore.
                          If null, defaults to true.
                        nullable: true
                        type: boolean
                      includedNamespaces:
                        description: IncludedNamespaces is a slice of namespace names
                          to include objects from. If empty, all namespaces are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      includedResources:
                        description: IncludedResources is a slice of resource names
                          to include in the restore. If empty, all resources in the
                          backup are included.
                        items:
                          type: string
                        nullable: true
                        type: array
                      itemOperationTimeout:
                        description: ItemOperationTimeout specifies the time used
                          to wait for RestoreItemAction operations The default value
                          is 1 hour.
                        type: string
                      labelSelector:
                        description: LabelSelector is a metav1.LabelSelector to filter
                          with when restoring individual objects from the backup.
                          If empty or nil, all objects are included. Optional.
                        nullable: true
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      namespaceMapping:
                        additionalProperties:
                          type: string
                        description: NamespaceMapping is a map of source namespace
                          names to target namespace names to restore into. Any source
                          namespaces not included in the map will be restored into
                          namespaces of the same name.
                        type: object
                      orLabelSelectors:
                        description: OrLabelSelectors is list of metav1.LabelSelector
                          to filter with when restoring individual objects from the
                          backup. If multiple provided they will be joined by the
                          OR operator. LabelSelector as well as OrLabelSelectors cannot
                          co-exist in restore request, only one of them can be used
                        items:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        nullable: true
                        type: array
                      preserveNodePorts:
                        description: PreserveNodePorts specifies whether to restore
                          old nodePorts from backup.
                        nullable: true
                        type: boolean
                      resourceModifier:
                        description: ResourceModifier specifies the reference to JSON
                          resource patches that should be applied to resources before
                          restoration.
                        nullable: true
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                        x-kubernetes-map-type: atomic
                      restorePVs:
                        description: RestorePVs specifies whether to restore all included
                          PVs from snapshot
                        nullable: true
                        type: boolean
                      restoreStatus:
                        description: RestoreStatus specifies which resources we should
                          restore the status field. If nil, no objects are included.
                          Optional.
                        nullable: true
                        properties:
                          excludedResources:
                            description: ExcludedResources specifies the resources
                              to which will not restore the status.
                            items:
                              type: string
                            nullable: true
                            type: array
                          includedResources:
                            description: IncludedResources specifies the resources
                              to which will restore the status. If empty, it applies
                              to all resources.
                            items:
                              type: string
                            nullable: true
                            type: array
                        type: object
                      scheduleName:
                        description: ScheduleName is the unique name of the Velero
                          schedule to restore from. If specified, and BackupName is
                          empty, Velero will restore from the most recent successful
                          backup created from this schedule.
                        type: string
                    required:
                    - backupName
                    type: object
                required:
                - backup
                - restore
                type: object
              replicationJobConfigName:
                description: ReplicationJobConfigName defines the name of the replication
                  job config for the WorkerReplicationJobConfig
                type: string
              replicationSliceName:
                description: ReplicationSliceName is the name of the ReplicationSlice
                type: string
            required:
            - rawSpec
            type: object
          status:
            description: WorkerReplicationJobConfigStatus defines the observed state
              of WorkerReplicationJobConfig
            properties:
              backup:
                description: BackupStatus captures the current status of a Velero
                  backup.
                properties:
                  backupItemOperationsAttempted:
                    description: BackupItemOperationsAttempted is the total number
                      of attempted async BackupItemAction operations for this backup.
                    type: integer
                  backupItemOperationsCompleted:
                    description: BackupItemOperationsCompleted is the total number
                      of successfully completed async BackupItemAction operations
                      for this backup.
                    type: integer
                  backupItemOperationsFailed:
                    description: BackupItemOperationsFailed is the total number of
                      async BackupItemAction operations for this backup which ended
                      with an error.
                    type: integer
                  completionTimestamp:
                    description: CompletionTimestamp records the time a backup was
                      completed. Completion time is recorded even on failed backups.
                      Completion time is recorded before uploading the backup object.
                      The server's time is used for CompletionTimestamps
                    format: date-time
                    nullable: true
                    type: string
                  csiVolumeSnapshotsAttempted:
                    description: CSIVolumeSnapshotsAttempted is the total number of
                      attempted CSI VolumeSnapshots for this backup.
                    type: integer
                  csiVolumeSnapshotsCompleted:
                    description: CSIVolumeSnapshotsCompleted is the total number of
                      successfully completed CSI VolumeSnapshots for this backup.
                    type: integer
                  errors:
                    description: Errors is a count of all error messages that were
                      generated during execution of the backup.  The actual errors
                      are in the backup's log file in object storage.
                    type: integer
                  expiration:
                    description: Expiration is when this Backup is eligible for garbage-collection.
                    format: date-time
                    nullable: true
                    type: string
                  failureReason:
                    description: FailureReason is an error that caused the entire
                      backup to fail.
                    type: string
                  formatVersion:
                    description: FormatVersion is the backup format version, including
                      major, minor, and patch version.
                    type: string
                  phase:
                    description: Phase is the current state of the Backup.
                    enum:
                    - New
                    - FailedValidation
                    - InProgress
                    - WaitingForPluginOperations
                    - WaitingForPluginOperationsPartiallyFailed
                    - Finalizing
                    - FinalizingPartiallyFailed
                    - Completed
                    - PartiallyFailed
                    - Failed
                    - Deleting
                    type: string
                  progress:
                    description: Progress contains information about the backup's
                      execution progress. Note that this information is best-effort
                      only -- if Velero fails to update it during a backup for any
                      reason, it may be inaccurate/stale.
                    nullable: true
                    properties:
                      itemsBackedUp:
                        description: ItemsBackedUp is the number of items that have
                          actually been written to the backup tarball so far.
                        type: integer
                      totalItems:
                        description: TotalItems is the total number of items to be
                          backed up. This number may change throughout the execution
                          of the backup due to plugins that return additional related
                          items to back up, the velero.io/exclude-from-backup label,
                          and various other filters that happen as items are processed.
                        type: integer
                    type: object
                  startTimestamp:
                    description: StartTimestamp records the time a backup was started.
                      Separate from CreationTimestamp, since that value changes on
                      restores. The server's time is used for StartTimestamps
                    format: date-time
                    nullable: true
                    type: string
                  validationErrors:
                    description: ValidationErrors is a slice of all validation errors
                      (if applicable).
                    items:
                      type: string
                    nullable: true
                    type: array
                  version:
                    description: 'Version is the backup format major version. Deprecated:
                      Please see FormatVersion'
                    type: integer
                  volumeSnapshotsAttempted:
                    description: VolumeSnapshotsAttempted is the total number of attempted
                      volume snapshots for this backup.
                    type: integer
                  volumeSnapshotsCompleted:
                    description: VolumeSnapshotsCompleted is the total number of successfully
                      completed volume snapshots for this backup.
                    type: integer
                  warnings:
                    description: Warnings is a count of all warning messages that
                      were generated during execution of the backup. The actual warnings
                      are in the backup's log file in object storage.
                    type: integer
                type: object
              restore:
                description: RestoreStatus captures the current status of a Velero
                  restore
                properties:
                  completionTimestamp:
                    description: CompletionTimestamp records the time the restore
                      operation was completed. Completion time is recorded even on
                      failed restore. The server's time is used for StartTimestamps
                    format: date-time
                    nullable: true
                    type: string
                  errors:
                    description: Errors is a count of all error messages that were
                      generated during execution of the restore. The actual errors
                      are stored in object storage.
                    type: integer
                  failureReason:
                    description: FailureReason is an error that caused the entire
                      restore to fail.
                    type: string
                  phase:
                    description: Phase is the current state of the Restore
                    enum:
                    - New
                    - FailedValidation
                    - InProgress
                    - WaitingForPluginOperations
                    - WaitingForPluginOperationsPartiallyFailed
                    - Completed
                    - PartiallyFailed
                    - Failed
                    type: string
                  progress:
                    description: Progress contains information about the restore's
                      execution progress. Note that this information is best-effort
                      only -- if Velero fails to update it during a restore for any
                      reason, it may be inaccurate/stale.
                    nullable: true
                    properties:
                      itemsRestored:
                        description: ItemsRestored is the number of items that have
                          actually been restored so far
                        type: integer
                      totalItems:
                        description: TotalItems is the total number of items to be
                          restored. This number may change throughout the execution
                          of the restore due to plugins that return additional related
                          items to restore
                        type: integer
                    type: object
                  restoreItemOperationsAttempted:
                    description: RestoreItemOperationsAttempted is the total number
                      of attempted async RestoreItemAction operations for this restore.
                    type: integer
                  restoreItemOperationsCompleted:
                    description: RestoreItemOperationsCompleted is the total number
                      of successfully completed async RestoreItemAction operations
                      for this restore.
                    type: integer
                  restoreItemOperationsFailed:
                    description: RestoreItemOperationsFailed is the total number of
                      async RestoreItemAction operations for this restore which ended
                      with an error.
                    type: integer
                  startTimestamp:
                    description: StartTimestamp records the time the restore operation
                      was started. The server's time is used for StartTimestamps
                    format: date-time
                    nullable: true
                    type: string
                  validationErrors:
                    description: ValidationErrors is a slice of all validation errors
                      (if applicable)
                    items:
                      type: string
                    nullable: true
                    type: array
                  warnings:
                    description: Warnings is a count of all warning messages that
                      were generated during execution of the restore. The actual warnings
                      are stored in object storage.
                    type: integer
                type: object
              storageClasses:
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: workerreplicationslice.worker.kubeslice.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kubeslice-controller-webhook-service
          namespace: kubeslice-controller
          path: /convert
      conversionReviewVersions:
        - v1
  group: worker.kubeslice.io
  names:
    kind: WorkerReplicationSlice
    listKind: WorkerReplicationSliceList
    plural: workerreplicationslice
    singular: workerreplicationslice
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkerReplicationSlice is the Schema for the workerreplicationslices API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkerReplicationSliceSpec defines the desired state of WorkerReplicationSlice
              properties:
                clusterName:
                  description: ClusterName defines the name of the cluster for the WorkerReplicationSlice
                  type: string
                replicationSliceName:
                  description: ReplicationSliceName defines the name of the replication slice for the WorkerReplicationSlice
                  type: string
                replicationType:
                  description: ReplicationType is the type of replication
                  type: string
                minIOBucketName:
                  description: MinIOBucketName is the name of the MinIO bucket
                  type: string
              type: object
            status:
              description: WorkerReplicationSliceStatus defines the observed state of WorkerReplicationSlice
              properties:
                backupStorageLocationCreation:
                  description: InstallationStatus defines the status of the installation
                  properties:
                    lastUpdated:
                      format: date-time
                      type: string
                    status:
                      type: string
                  type: object
                veleroInstallation:
                  description: InstallationStatus defines the status of the installation
                  properties:
                    lastUpdated:
                      format: date-time
                      type: string
                    status:
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: workerserviceimports.worker.kubeslice.io
spec:
  group: worker.kubeslice.io
  names:
    kind: WorkerServiceImport
    listKind: WorkerServiceImportList
    plural: workerserviceimports
    singular: workerserviceimport
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkerServiceImport is the Schema for the workerserviceimport
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkerServiceImportSpec defines the desired state of WorkerServiceImport
              properties:
                aliases:
                  description: Alias names for the exported service. The service could
                    be addressed by the alias names in addition to the slice.local name.
                  items:
                    type: string
                  type: array
                serviceDiscoveryEndpoints:
                  description: the service discovery endpoint array
                  items:
                    properties:
                      cluster:
                        description: The ID of the cluster.
                        type: string
                      dnsName:
                        description: the dns_name of the service
                        type: string
                      nsmIp:
                        description: The NSM IP address.
                        type: string
                      podName:
                        description: The name of the pod.
                        type: string
                      port:
                        description: port of the service
                        format: int32
                        type: integer
                    type: object
                  type: array
                serviceDiscoveryPorts:
                  description: The ports for the given service.
                  items:
                    properties:
                      name:
                        description: The name of the port.
                        type: string
                      port:
                        description: The target port number.
                        format: int32
                        type: integer
                      protocol:
                        description: The protocol.
                        type: string
                      servicePort:
                        description: The port exposed by service
                        format: int32
                        type: integer
                      serviceProtocol:
                        description: The service protocol
                        type: string
                    type: object
                  type: array
                serviceName:
                  description: ServiceName is the name of the service
                  type: string
                serviceNamespace:
                  description: ServiceNamespace is the namespace of the service
                  type: string
                sliceName:
                  description: The name of the slice.
                  type: string
                sourceClusters:
                  description: clusterId is the id of the cluster where the service
                    is available.
                  items:
                    type: string
                  type: array
              type: object
            status:
              description: WorkerServiceImportStatus defines the observed state of WorkerServiceImport
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: workersliceconfigs.worker.kubeslice.io
spec:
  group: worker.kubeslice.io
  names:
    kind: WorkerSliceConfig
    listKind: WorkerSliceConfigList
    plural: workersliceconfigs
    singular: workersliceconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: WorkerSliceConfig is the Schema for the slice API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkerSliceConfigSpec defines the desired state of Slice
            properties:
              clusterSubnetCIDR:
                type: string
              externalGatewayConfig:
                properties:
                  egress:
                    properties:
                      enabled:
                        type: boolean
                    type: object
                  gatewayType:
                    enum:
                    - none
                    - istio
                    - envoy
                    type: string
                  ingress:
                    properties:
                      enabled:
                        type: boolean
                    type: object
                  nsIngress:
                    properties:
                      enabled:
                        type: boolean
                    type: object
                  vpcServiceAccess:
                    properties:
                      egress:
                        properties:
                          enabled:
                            type: boolean
                        type: object
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                        type: object
                    type: object
                type: object
              ipamClusterOctet:
                type: integer
              namespaceIsolationProfile:
                properties:
                  allowedNamespaces:
                    items:
                      type: string
                    type: array
                  applicationNamespaces:
                    items:
                      type: string
                    type: array
                  isolationEnabled:
                    default: false
                    type: boolean
                type: object
              octet:
                type: integer
              overlayNetworkDeploymentMode:
                default: single-network
                enum:
                - single-network
                - multi-network
                - no-network
                type: string
              qosProfileDetails:
                description: QOSProfile is the QOS Profile configuration from backend
                properties:
                  bandwidthCeilingKbps:
                    type: integer
                  bandwidthGuaranteedKbps:
                    type: integer
                  dscpClass:
                    enum:
                    - Default
                    - AF11
                    - AF12
                    - AF13
                    - AF21
                    - AF22
                    - AF23
                    - AF31
                    - AF32
                    - AF33
                    - AF41
                    - AF42
                    - AF43
                    - EF
                    type: string
                  priority:
                    type: integer
                  queueType:
                    default: HTB
                    type: string
                  tcType:
                    type: string
                type: object
              sliceGatewayProvider:
                description: WorkerSliceGatewayProvider defines the configuration
                  for slicegateway
                properties:
                  sliceCaType:
                    default: Local
                    type: string
                  sliceGatewayProtocol:
                    default: UDP
                    enum:
                    - TCP
                    - UDP
                    type: string
                  sliceGatewayServiceType:
                    default: NodePort
                    enum:
                    - NodePort
                    - LoadBalancer
                    type: string
                  sliceGatewayType:
                    default: OpenVPN
                    type: string
                type: object
              sliceIpamType:
                default: Local
                type: string
              sliceName:
                type: string
              sliceSubnet:
                type: string
              sliceType:
                default: Application
                type: string
            type: object
          status:
            description: WorkerSliceConfigStatus defines the observed state of Slice
            properties:
              connectedAppPods:
                items:
                  description: AppPod defines the app pods connected to slice
                  properties:
                    nsmInterface:
                      description: NsmInterface is the nsm interface of App
                      type: string
                    nsmIp:
                      description: NsmIP is the nsm ip of App
                      type: string
                    nsmPeerIp:
                      description: PeerIp is the nsm peer ip of gateway
                      type: string
                    podIp:
                      description: PodIP is App Pod IP
                      type: string
                    podName:
                      description: PodName is App Pod Name
                      type: string
                    podNamespace:
                      description: PodNamespace is App Pod Namespace
                      type: string
                  type: object
                type: array
              onboardedAppNamespaces:
                items:
                  properties:
                    name:
                      type: string
                  type: object
                type: array
              sliceHealth:
                description: SliceHealth shows the health of the slice in worker cluster
                properties:
                  componentStatuses:
                    description: ComponentStatuses shows the health status of individual
                      components in the cluster
                    items:
                      properties:
                        component:
                          description: Component name
                          type: string
                        componentHealthStatus:
                          enum:
                          - Normal
                          - Warning
                          - Error
                          type: string
                      required:
                      - component
                      - componentHealthStatus
                      type: object
                    type: array
                  lastUpdated:
                    description: LastUpdated is the timestamp when healthstatus was
                      updated
                    format: date-time
                    type: string
                  sliceHealthStatus:
                    description: SliceHealthStatus shows the overall health status
                      of the slice
                    enum:
                    - Normal
                    - Warning
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: workerslicegateways.worker.kubeslice.io
spec:
  group: worker.kubeslice.io
  names:
    kind: WorkerSliceGateway
    listKind: WorkerSliceGatewayList
    plural: workerslicegateways
    singular: workerslicegateway
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkerSliceGateway is the Schema for the slicegateways API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkerSliceGatewaySpec defines the desired state of WorkerSliceGateway
              properties:
                gatewayConnectivityType:
                  default: NodePort
                  enum:
                  - NodePort
                  - LoadBalancer
                  type: string
                gatewayCredentials:
                  properties:
                    secretName:
                      type: string
                  type: object
                gatewayHostType:
                  enum:
                    - Client
                    - Server
                  type: string
                gatewayNumber:
                  type: integer
                gatewayProtocol:
                  default: UDP
                  enum:
                  - TCP
                  - UDP
                  type: string
                gatewayType:
                  default: OpenVPN
                  type: string
                localGatewayConfig:
                  properties:
                    clusterName:
                      type: string
                    gatewayName:
                      type: string
                    gatewaySubnet:
                      type: string
                    loadBalancerIps:
                      items:
                        type: string
                      type: array
                    nodeIp:
                      type: string
                    nodeIps:
                      items:
                        type: string
                      type: array
                    nodePort:
                      type: integer
                    nodePorts:
                      items:
                        type: integer
                      type: array
                    vpnIp:
                      type: string
                  type: object
                remoteGatewayConfig:
                  properties:
                    clusterName:
                      type: string
                    gatewayName:
                      type: string
                    gatewaySubnet:
                      type: string
                    loadBalancerIps:
                      items:
                        type: string
                      type: array
                    nodeIp:
                      type: string
                    nodeIps:
                      items:
                        type: string
                      type: array
                    nodePort:
                      type: integer
                    nodePorts:
                      items:
                        type: integer
                      type: array
                    vpnIp:
                      type: string
                  type: object
                sliceName:
                  type: string
              type: object
            status:
              description: WorkerSliceGatewayStatus defines the observed state of WorkerSliceGateway
              properties:
                clusterInsertionIndex:
                  type: integer
                gatewayNumber:
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: workerslicegwrecyclers.worker.kubeslice.io
spec:
  group: worker.kubeslice.io
  names:
    kind: WorkerSliceGwRecycler
    listKind: WorkerSliceGwRecyclerList
    plural: workerslicegwrecyclers
    singular: workerslicegwrecycler
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkerSliceGwRecycler is the Schema for the workerslicegwrecyclers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkerSliceGwRecyclerSpec defines the desired state of WorkerSliceGwRecycler
              properties:
                clientRedundancyNumber:
                  type: integer
                gwPair:
                  properties:
                    clientId:
                      type: string
                    serverId:
                      type: string
                  type: object
                request:
                  type: string
                serverRedundancyNumber:
                  type: integer
                sliceGwClient:
                  type: string
                sliceGwServer:
                  type: string
                sliceName:
                  type: string
                state:
                  type: string
              type: object
            status:
              description: WorkerSliceGwRecyclerStatus defines the observed state of WorkerSliceGwRecycler
              properties:
                client:
                  properties:
                    recycledClient:
                      type: string
                    response:
                      type: string
                  type: object
                recycledServers:
                  items:
                    type: string
                  type: array
                serversToRecycle:
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: workerslicenodeaffinities.worker.kubeslice.io
spec:
  group: worker.kubeslice.io
  names:
    kind: WorkerSliceNodeAffinity
    listKind: WorkerSliceNodeAffinityList
    plural: workerslicenodeaffinities
    singular: workerslicenodeaffinity
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkerSliceNodeAffinity is the Schema for the workerslicenodeaffinities
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkerSliceNodeAffinitySpec defines the desired state of
                WorkerSliceNodeAffinity
              properties:
                clusterName:
                  description: ClusterName defines the name of the cluster for the WorkerSliceNodeAffinity
                  type: string
                nodeAffinityRules:
                  description: NodeAffinityRules defines the node affinity profile for
                    the slice
                  items:
                    properties:
                      namespace:
                        description: Namespace is the namespace in the slice this rule
                          applies to
                        type: string
                      nodeSelectorLabels:
                        description: NodeSelectorLabels defines the label selectors
                          to select nodes for assigning to pods
                        items:
                          description: A node selector requirement is a selector that
                            contains values, a key, and an operator that relates the
                            key and values.
                          properties:
                            key:
                              description: The label key that the selector applies to.
                              type: string
                            operator:
                              description: Represents a key's relationship to a set
                                of values. Valid operators are In, NotIn, Exists, DoesNotExist.
                                Gt, and Lt.
                              type: string
                            values:
                              description: An array of string values. If the operator
                                is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. If the operator is Gt or Lt, the
                                values array must have a single element, which will
                                be interpreted as an integer. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                    type: object
                  type: array
                sliceName:
                  description: SliceName defines the name of the slice for the WorkerSliceNodeAffinity
                  type: string
              type: object
            status:
              description: WorkerSliceNodeAffinityStatus defines the observed state
                of WorkerSliceNodeAffinity
              properties:
                conditions:
                  description: Conditions defines conditions of the SliceNodeAffinity
                  items:
                    properties:
                      lastUpdatedTimeStamp:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human-readable message indicating details about
                          the transition.
                        type: string
                      nodeName:
                        description: The NodeName responsible for the failure
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                    type: object
                  type: array
                nodeAffinityRules:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  items:
                    properties:
                      namespace:
                        description: Namespace is the namespace in the slice this rule
                          applies to
                        type: string
                      nodeSelectorLabels:
                        description: NodeSelectorLabels defines the label selectors
                          to select nodes for assigning to pods
                        items:
                          description: A node selector requirement is a selector that
                            contains values, a key, and an operator that relates the
                            key and values.
                          properties:
                            key:
                              description: The label key that the selector applies to.
                              type: string
                            operator:
                              description: Represents a key's relationship to a set
                                of values. Valid operators are In, NotIn, Exists, DoesNotExist.
                                Gt, and Lt.
                              type: string
                            values:
                              description: An array of string values. If the operator
                                is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. If the operator is Gt or Lt, the
                                values array must have a single element, which will
                                be interpreted as an integer. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: workersliceresourcequotas.worker.kubeslice.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kubeslice-controller-webhook-service
          namespace: kubeslice-controller
          path: /convert
      conversionReviewVersions:
        - v1
  group: worker.kubeslice.io
  names:
    kind: WorkerSliceResourceQuota
    listKind: WorkerSliceResourceQuotaList
    plural: workersliceresourcequotas
    singular: workersliceresourcequota
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkerSliceResourceQuota is the Schema for the workersliceresourcequota API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkerSliceResourceQuotaSpec defines the desired state of WorkerSliceResourceQuota
              properties:
                clusterName:
                  description: ClusterName defines the name of the cluster for the WorkerResourceQuota
                  type: string
                resourceQuotaProfile:
                  description: ResourceQuotaProfile defines the resource quota profile for the slice
                  properties:
                    clusterQuota:
                      description: ClusterQuota defines the configuration for cluster quota of a resource quota
                      properties:
                        namespaceQuota:
                          description: NamespaceQuota defines the configuration for namespace quota of a ClusterQuota
                          items:
                            description: NamespaceQuota defines the configuration for namespace quota of a namespaceQuota
                            properties:
                              enforceQuota:
                                default: false
                                description: EnforceQuota defines the enforceQuota status flag for NamespaceQuota
                                type: boolean
                              namespace:
                                description: Namespace defines the namespace of the NamespaceQuota
                                type: string
                              resources:
                                description: Resources defines the configuration for resources for NamespaceQuota
                                properties:
                                  defaultLimitPerContainer:
                                    description: DefaultResourcePerContainer is a set of (resource name, quantity) pairs.
                                    properties:
                                      cpu:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: CPU in cores. (500m = .5 cores)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      ephemeralStorage:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      memory:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  defaultRequestPerContainer:
                                    description: DefaultResourcePerContainer is a set of (resource name, quantity) pairs.
                                    properties:
                                      cpu:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: CPU in cores. (500m = .5 cores)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      ephemeralStorage:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      memory:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  limit:
                                    description: LimitResourceList is a set of (resource name, quantity) pairs.
                                    properties:
                                      cpu:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: CPU in cores. (500m = .5 cores)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      ephemeralStorage:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      memory:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      podCount:
                                        description: PodCount in number.
                                        format: int64
                                        type: integer
                                    type: object
                                  request:
                                    description: RequestResourceList is a set of (resource name, quantity) pairs.
                                    properties:
                                      cpu:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: CPU in cores. (500m = .5 cores)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      ephemeralStorage:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      memory:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    type: object
                                type: object
                            type: object
                          type: array
                        resources:
                          description: Resources defines the configuration for resources for ClusterQuota
                          properties:
                            limit:
                              description: LimitResourceList is a set of (resource name, quantity) pairs.
                              properties:
                                cpu:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: CPU in cores. (500m = .5 cores)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                ephemeralStorage:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                memory:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                podCount:
                                  description: PodCount in number.
                                  format: int64
                                  type: integer
                              type: object
                            request:
                              description: RequestResourceList is a set of (resource name, quantity) pairs.
                              properties:
                                cpu:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: CPU in cores. (500m = .5 cores)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                ephemeralStorage:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                memory:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              type: object
                          type: object
                      type: object
                    sliceQuota:
                      description: SliceQuota defines the configuration for slice quota of a resource quota
                      properties:
                        resources:
                          description: Resources defines the configuration for resources for SliceQuota
                          properties:
                            defaultRequestPerContainer:
                              description: DefaultResourcePerContainer is a set of (resource name, quantity) pairs.
                              properties:
                                cpu:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: CPU in cores. (500m = .5 cores)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                ephemeralStorage:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                memory:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              type: object
                            limit:
                              description: LimitResourceList is a set of (resource name, quantity) pairs.
                              properties:
                                cpu:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: CPU in cores. (500m = .5 cores)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                ephemeralStorage:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                memory:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                podCount:
                                  description: PodCount in number.
                                  format: int64
                                  type: integer
                              type: object
                            request:
                              description: RequestResourceList is a set of (resource name, quantity) pairs.
                              properties:
                                cpu:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: CPU in cores. (500m = .5 cores)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                ephemeralStorage:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                memory:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              type: object
                          type: object
                      type: object
                  type: object
                sliceName:
                  description: SliceName defines the name of the slice for the WorkerResourceQuota
                  type: string
              type: object
            status:
              description: WorkerSliceResourceQuotaStatus defines the observed state of WorkerSliceResourceQuota
              properties:
                clusterResourceQuotaStatus:
                  properties:
                    namespaceResourceQuotaStatus:
                      items:
                        properties:
                          namespace:
                            type: string
                          requestResourceUsage:
                            description: RequestResourceList is a set of (resource name, quantity) pairs.
                            properties:
                              cpu:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: CPU in cores. (500m = .5 cores)
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              ephemeralStorage:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              memory:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          resourceUsage:
                            description: LimitResourceList is a set of (resource name, quantity) pairs.
                            properties:
                              cpu:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: CPU in cores. (500m = .5 cores)
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              ephemeralStorage:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              memory:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              podCount:
                                description: PodCount in number.
                                format: int64
                                type: integer
                            type: object
                        type: object
                      type: array
                    requestResourceUsage:
                      description: RequestResourceList is a set of (resource name, quantity) pairs.
                      properties:
                        cpu:
                          anyOf:
                            - type: integer
                            - type: string
                          description: CPU in cores. (500m = .5 cores)
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        ephemeralStorage:
                          anyOf:
                            - type: integer
                            - type: string
                          description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        memory:
                          anyOf:
                            - type: integer
                            - type: string
                          description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    resourceUsage:
                      description: LimitResourceList is a set of (resource name, quantity) pairs.
                      properties:
                        cpu:
                          anyOf:
                            - type: integer
                            - type: string
                          description: CPU in cores. (500m = .5 cores)
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        ephemeralStorage:
                          anyOf:
                            - type: integer
                            - type: string
                          description: EphemeralStorage Local ephemeral storage, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024) The resource name for EphemeralStorage is alpha, and it can change across releases.
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        memory:
                          anyOf:
                            - type: integer
                            - type: string
                          description: Memory in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        podCount:
                          description: PodCount in number.
                          format: int64
                          type: integer
                      type: object
                  type: object
                onboardedNamespace:
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  name: workerslicerolebindings.worker.kubeslice.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kubeslice-controller-webhook-service
          namespace: kubeslice-controller
          path: /convert
      conversionReviewVersions:
        - v1
  group: worker.kubeslice.io
  names:
    kind: WorkerSliceRoleBinding
    listKind: WorkerSliceRoleBindingList
    plural: workerslicerolebindings
    singular: workerslicerolebinding
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkerSliceRoleBinding is the Schema for the workerslicerolebindings
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            bindings:
              description: RoleBinding references a role, but does not contain it.
              properties:
                applyTo:
                  description: ApplyTo contains information about the namespace and
                    the Subjects.
                  items:
                    description: ApplyTo contains information about the namespace and
                      the Subjects. It adds who information via Subjects and namespace
                      information by which namespace it exists in.
                    properties:
                      namespace:
                        description: Namespace of the referenced object.  If the object
                          kind is non-namespace, such as "User" or "Group", and this
                          value is not empty the Authorizer should report an error.
                        type: string
                      subjects:
                        description: Subjects holds references to the objects the role
                          applies to.
                        items:
                          description: Subject contains a reference to the object or
                            user identities a role binding applies to.  This can either
                            hold a direct API object reference, or a value for non-objects
                            such as user and group names.
                          properties:
                            apiGroup:
                              description: APIGroup holds the API group of the referenced
                                subject. Defaults to "" for ServiceAccount subjects.
                                Defaults to "rbac.authorization.k8s.io" for User and
                                Group subjects.
                              type: string
                            kind:
                              description: Kind of object being referenced. Values defined
                                by this API group are "User", "Group", and "ServiceAccount".
                                If the Authorizer does not recognized the kind value,
                                the Authorizer should report an error.
                              type: string
                            name:
                              description: Name of the object being referenced.
                              type: string
                            namespace:
                              description: Namespace of the referenced object.  If the
                                object kind is non-namespace, such as "User" or "Group",
                                and this value is not empty the Authorizer should report
                                an error.
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                    type: object
                  type: array
                rules:
                  items:
                    description: PolicyRule holds information that describes a policy
                      rule, but does not contain information about who the rule applies
                      to or which namespace the rule applies to.
                    properties:
                      apiGroups:
                        description: APIGroups is the name of the APIGroup that contains
                          the resources.  If multiple API groups are specified, any
                          action requested against one of the enumerated resources in
                          any API group will be allowed.
                        items:
                          type: string
                        type: array
                      nonResourceURLs:
                        description: NonResourceURLs is a set of partial urls that a
                          user should have access to.  *s are allowed, but only as the
                          full, final step in the path Since non-resource URLs are not
                          namespaced, this field is only applicable for ClusterRoles
                          referenced from a ClusterRoleBinding. Rules can either apply
                          to API resources (such as "pods" or "secrets") or non-resource
                          URL paths (such as "/api"),  but not both.
                        items:
                          type: string
                        type: array
                      resourceNames:
                        description: ResourceNames is an optional white list of names
                          that the rule applies to.  An empty set means that everything
                          is allowed.
                        items:
                          type: string
                        type: array
                      resources:
                        description: Resources is a list of resources this rule applies
                          to. '*' represents all resources.
                        items:
                          type: string
                        type: array
                      verbs:
                        description: Verbs is a list of Verbs that apply to ALL the
                          ResourceKinds contained in this rule. '*' represents all verbs.
                        items:
                          type: string
                        type: array
                    required:
                      - verbs
                    type: object
                  type: array
              type: object
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkerSliceRoleBindingSpec defines the desired state of WorkerSliceRoleBinding
              properties:
                clusterName:
                  description: ClusterName defines the name of the cluster for the WorkerSliceRoleBinding
                  type: string
                sliceName:
                  description: SliceName defines the name of the slice for the WorkerSliceRoleBinding
                  type: string
              type: object
            status:
              properties:
                roleRefCondition:
                  properties:
                    condition:
                      description: Condition defines conditions of the RoleRef, one
                        of INVALID_RULE, INVALID_ROLE_BINDING.
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    roleRef:
                      description: Name, APIGroup and Kind of the RoleRef
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of this
                          representation of an object. Servers should convert recognized
                          schemas to the latest internal value, and may reject unrecognized
                          values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                  required:
                    - condition
                    - lastUpdateTime
                    - reason
                    - roleRef
                    - status
                  type: object
                sliceSATokens:
                  description: CA.crt and token for every serviceaccount we create.
                    for every namespace
                  items:
                    properties:
                      ca_crt:
                        type: string
                      endpoint:
                        type: string
                      namespace:
                        type: string
                      serviceAccountName:
                        type: string
                      token:
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-controller-controller-manager
  namespace: kubeslice-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-controller-ovpn-manager
  namespace: kubeslice-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubeslice-controller-leader-election-role
  namespace: kubeslice-controller
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubeslice-controller-controller-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - escalate
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - escalate
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - escalate
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - create
      - delete
      - escalate
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - escalate
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - escalate
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - controller.kubeslice.io
    resources:
      - clusters
      - replicationjobconfigs
      - replicationslice
      - projects
      - serviceexportconfigs
      - sliceconfigs
      - slicenodeaffinities
      - sliceqosconfigs
      - sliceresourcequotaconfigs
      - slicerolebindings
      - sliceroletemplates
      - vpnkeyrotations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - controller.kubeslice.io
    resources:
      - clusters/finalizers
      - replicationjobconfigs/finalizers
      - replicationslice/finalizers
      - projects/finalizers
      - serviceexportconfigs/finalizers
      - sliceconfigs/finalizers
      - slicenodeaffinities/finalizers
      - sliceqosconfigs/finalizers
      - sliceresourcequotaconfigs/finalizers
      - slicerolebindings/finalizers
      - sliceroletemplates/finalizers
      - vpnkeyrotations/finalizers
    verbs:
      - update
  - apiGroups:
      - controller.kubeslice.io
    resources:
      - clusters/status
      - replicationjobconfigs/status
      - replicationslice/status
      - projects/status
      - serviceexportconfigs/status
      - sliceconfigs/status
      - slicenodeaffinities/status
      - sliceqosconfigs/status
      - sliceresourcequotaconfigs/status
      - slicerolebindings/status
      - sliceroletemplates/status
      - vpnkeyrotations/status
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - rolebindings
      - roles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - worker.kubeslice.io
    resources:
      - workerreplicationjobconfigs
      - workerreplicationslice
      - workerserviceimports
      - workersliceconfigs
      - workerslicegateways
      - workerslicegwrecyclers
      - workerslicenodeaffinities
      - workersliceresourcequotas
      - workerslicerolebindings
      - workersliceappserviceresourceusages
      - workerslicegpuprovisioningrequests  
      - gpuworkloads
      - workerclustergpuallocations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - worker.kubeslice.io
    resources:
      - workerreplicationjobconfigs/finalizers
      - workerreplicationslice/finalizers
      - workerserviceimports/finalizers
      - workersliceconfigs/finalizers
      - workerslicegateways/finalizers
      - workerslicegwrecyclers/finalizers
      - workerslicenodeaffinities/finalizers
      - workersliceresourcequotas/finalizers
      - workerslicerolebindings/finalizers
      - workersliceappserviceresourceusages/finalizers
      - workerslicegpuprovisioningrequests/finalizers
      - gpuworkloads/finalizers
    verbs:
      - update
  - apiGroups:
      - worker.kubeslice.io
    resources:
      - workerreplicationjobconfigs/status
      - workerreplicationslice/status
      - workerserviceimports/status
      - workersliceconfigs/status
      - workerslicegateways/status
      - workerslicegwrecyclers/status
      - workerslicenodeaffinities/status
      - workersliceresourcequotas/status
      - workerslicerolebindings/status
      - workersliceappserviceresourceusages/status
      - workerslicegpuprovisioningrequests/status
      - gpuworkloads/status
    verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create
  - apiGroups:
      - inventory.kubeslice.io
    resources:
      - workerclustergpuallocations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - inventory.kubeslice.io
    resources:
      - workerclustergpuallocations/finalizers
    verbs:
      - update
  - apiGroups:
      - inventory.kubeslice.io
    resources:
      - workerclustergpuallocations/status
    verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create
  - apiGroups:
      - gpr.kubeslice.io
    resources:
      - gpuprovisioningrequests
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gpr.kubeslice.io
    resources:
      - gpuprovisioningrequests/status
    verbs:
      - get
      - list
      - watch
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: v1.8.0
  name: kubeslice-controller-kube-state-metrics
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
      - nodes
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - endpoints
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
      - ingresses
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - list
      - watch
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - list
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
      - volumeattachments
    verbs:
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-controller-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-controller-ovpn-editor-role
rules:
  - apiGroups:
      - worker.kubeslice.io
    resources:
      - workerslicegateways
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - escalate
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - escalate
      - get
      - list
      - watch
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - worker.kubeslice.io
    resources:
      - workerslicegateways/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-controller-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeslice-controller-leader-election-rolebinding
  namespace: kubeslice-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeslice-controller-leader-election-role
subjects:
  - kind: ServiceAccount
    name: kubeslice-controller-controller-manager
    namespace: kubeslice-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-controller-controller-role
subjects:
  - kind: ServiceAccount
    name: kubeslice-controller-controller-manager
    namespace: kubeslice-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-controller-ovpn-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-controller-ovpn-editor-role
subjects:
  - kind: ServiceAccount
    name: kubeslice-controller-ovpn-manager
    namespace: kubeslice-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-controller-proxy-role
subjects:
  - kind: ServiceAccount
    name: kubeslice-controller-controller-manager
    namespace: kubeslice-controller
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 35a65c38.kubeslice.io
kind: ConfigMap
metadata:
  name: kubeslice-controller-manager-config
  namespace: kubeslice-controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kubeslice-controller-controller-manager-metrics-service
  namespace: kubeslice-controller
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: kubeslice-controller-webhook-service
  namespace: kubeslice-controller
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    control-plane: controller-manager
