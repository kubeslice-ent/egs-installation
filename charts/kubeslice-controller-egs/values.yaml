# Default values for k-native.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: &defaultRegistry docker.io/aveshasystems
  # Profile settings (e.g., for OpenShift)
  profile:
    # if you're installing in openshift cluster make this variable true
    openshift: false
  kubeTally:
    # Enable or disable KubeTally
    enabled: false

    postgresSecretName: kubetally-db-credentials # Default value, secret name can be overridden

    # Ensure to configure the mandatory PostgreSQL database settings when 'kubetally enable' is true.
    postgresAddr: # Optional, can be specified here or retrieved from the secret
    postgresPort: # Optional, can be specified here or retrieved from the secret
    postgresUser: # Optional, can be specified here or retrieved from the secret
    postgresPassword: # Optional, can be specified here or retrieved from the secret
    postgresDB: # Optional, can be specified here or retrieved from the secret
    postgresSslmode: require # optional, default: require other values: disable

    # Service type for price Service Type
    priceServiceType: ClusterIP

    # Number of workers for the price updater
    priceUpdaterWorkers: 5

    # Prometheus URL for monitoring(should be specified if needed)
    prometheusUrl: http://prometheus-service:9090

    # Data processing time window (hours ago)
    dataProcessingHoursAgo: 720

    # Schedule for the pricing updater (cron expression)
    pricingUpdaterSchedule: 0 0 1 * *

    # updates price for listed cloud providers
    pricingUpdaterCloudProviders: "aws,linode"

kubeslice:
  # Configuration for the RBAC proxy
  rbacproxy:
    imageRegistry: *defaultRegistry
    # Image name for the RBAC proxy
    image: kubebuilder-kube-rbac-proxy
    # Image tag for the RBAC proxy
    tag: v0.18.0

  # Configuration for the KubeSlice controller
  controller:
    # Log level for the controller
    logLevel: info
    # Prefix for RBAC resources created by KubeSlice
    rbacResourcePrefix: kubeslice-rbac
    # Prefix for project namespaces created by KubeSlice
    projectnsPrefix: kubeslice
    # Endpoint for the controller (should be specified if needed)
    endpoint: ""
    imageRegistry: aveshadev #*defaultRegistry
    # Image name for the KubeSlice controller
    image: kubeslice-controller-ent-egs
    # Image tag for the KubeSlice controller
    tag: 1.11.1-RELEASE-4f7eb6b1
    # Image pull policy for the KubeSlice controller
    pullPolicy: IfNotPresent
    # Configuration for kubeTally, which handles chargeback and metrics
    kubeTally:
      # Interval for cleaning up metrics when a worker cluster stops communicating
      metricsCleanupInterval: 15m

  # Configuration for events
  events:
    # Whether events are disabled
    disabled: false

  # license details by default mode set to auto and license set to trial - please give company-name or user-name as customerName
  license:
    # possible license type values ["kubeslice-trial-license"]
    type: kubeslice-trial-license
    # possible license mode - ["auto", "manual"]
    mode: auto
    # please give company-name or user-name as customerName
    customerName: ""

egs:
  gprManager:
    imageRegistry: aveshadev #*defaultRegistry
    # Image name for the gpr-manager
    image: gpr-manager
    # Image tag for the gpr-manager
    tag: 0.9.1-RELEASE-a044cb7d
    imagePullPolicy: IfNotPresent
    # Period for checking if there is queue processing needed (in seconds)
    qmgrCheckPeriod: 60
    # Number of times a GPR can be delayed if there is not enough inventory
    maxDelayedCount: 10
    # Period for refreshing the GPRs
    refreshWaitTimeInterval: 300

  queueManager:
    imageRegistry: aveshadev #*defaultRegistry
    # Image name for the gpr-manager
    image: queue-manager
    # Image tag for the gpr-manager
    tag: 0.8.3-RELEASE-72d6b6de
    imagePullPolicy: IfNotPresent
    service:
      name: egs-queue-manager
      port: 80
    # turn off reflection
    appEnv: "production"

  inventory:
    imageRegistry: aveshadev #*defaultRegistry
    # Image name for inventory-manager
    image: inventory-manager
    # Image tag for inventory-manager
    tag: 0.10.1-RELEASE-36435460 
    imagePullPolicy: IfNotPresent
    logLevel: INFO
    service:
      name: egs-inventory-manager
      port: 80

imagePullSecretsName: "kubeslice-image-pull-secret"
# leave the below fields empty if secrets are managed externally.
imagePullSecrets:
  repository: https://index.docker.io/v1/ ## Value to be used incase using the docker hub images-  https://index.docker.io/v1/
  username:
  password:
  email:
  dockerconfigjson: ## Value to be used if using external secret managers
