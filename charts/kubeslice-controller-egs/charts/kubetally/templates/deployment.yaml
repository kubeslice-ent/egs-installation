apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.kubetally.pricingService.labels }}
  labels:
  {{ toYaml .Values.kubetally.pricingService.labels | nindent 4 }}
  {{- end }}
  {{- if .Values.kubetally.pricingService.annotations }}
  annotations:
  {{ toYaml .Values.kubetally.pricingService.annotations | nindent 4 }}
  {{- end }}
  name: kubetally-pricing-service
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- if .Values.kubetally.pricingService.labels }}
    {{ toYaml .Values.kubetally.pricingService.labels | nindent 6 }}
    {{- end }}
  strategy: {}
  template:
    metadata:
      annotations:
      {{- if .Values.kubetally.pricingService.annotations }}
      {{ toYaml .Values.kubetally.pricingService.annotations | nindent 8 }}
      {{- end }}
      {{- if .Values.kubetally.pricingService.labels }}
      labels:
      {{ toYaml .Values.kubetally.pricingService.labels | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.kubetally.pricingService.affinity }}
      affinity:
      {{ toYaml .Values.kubetally.pricingService.affinity | nindent 8 }}
      {{- end }}
      containers:
        - image:  '{{ .Values.kubetally.pricingService.imageRegistry }}/{{.Values.kubetally.pricingService.image}}:{{.Values.kubetally.pricingService.tag}}'
          imagePullPolicy: {{.Values.kubetally.pricingService.imagePullPolicy}}
          name: pricing-service
          securityContext:
          {{- if .Values.kubetally.pricingService.containerSecurityContext }} 
          {{ toYaml .Values.kubetally.pricingService.containerSecurityContext | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 5000
          env:
            - name: APP_ENV
              value: Production
            - name: PRICE_DATABASE_ADDR
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresAddr
            - name: PRICE_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresPort
            - name: PRICE_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresUser
            - name: PRICE_DATABASE_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresPassword
            - name: PRICE_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresDB
            - name: DATABASE_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresSslmode
            - name: PORT
              value: "8088"
            - name: PROMETHEUS_ENDPOINT
              value: {{ .Values.global.kubeTally.prometheusUrl }}
            - name: CONTROLLER_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          {{- if .Values.kubetally.pricingService.resources }}
          resources: 
          {{ toYaml .Values.kubetally.pricingService.resources | nindent 12 }}
          {{- end }}
      securityContext:
      {{- if .Values.kubetally.pricingService.podSecurityContext }}
      {{ toYaml .Values.kubetally.pricingService.podSecurityContext | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.kubetally.imagePullSecretName }}
      {{- if .Values.kubetally.pricingService.tolerations }}
      tolerations: 
      {{ toYaml .Values.kubetally.pricingService.tolerations | nindent 8 }}
      {{- end }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kubetally-pricing-updater
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "{{ .Values.global.kubeTally.pricingUpdaterSchedule }}"
  startingDeadlineSeconds: 120
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
          {{- if .Values.kubetally.chargeUpdater.annotations }}
          {{ toYaml .Values.kubetally.chargeUpdater.annotations | nindent 12 }}
          {{- end }}
        spec:
          containers:
            - name: pricing-updater
              securityContext:
              {{- if .Values.kubetally.chargeUpdater.containerSecurityContext }}
              {{ toYaml .Values.kubetally.chargeUpdater.containerSecurityContext | nindent 16 }}
              {{- end }}
              imagePullPolicy: {{ .Values.kubetally.chargeUpdater.imagePullPolicy }}
              image: '{{ .Values.kubetally.chargeUpdater.imageRegistry }}/{{ .Values.kubetally.chargeUpdater.image}}:{{ .Values.kubetally.chargeUpdater.tag }}'
              env:
                - name: APP_ENV
                  value: Production
                - name: PRICE_DATABASE_ADDR
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                      key: postgresAddr
                - name: PRICE_DATABASE_PORT
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                      key: postgresPort
                - name: PRICE_DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                      key: postgresUser
                - name: PRICE_DATABASE_PASS
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                      key: postgresPassword
                - name: PRICE_DATABASE_NAME
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                      key: postgresDB
                - name: DATABASE_SSL_MODE
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                      key: postgresSslmode
                - name: NUM_AWS_PULL_WORKERS
                  value: "{{.Values.global.kubeTally.priceUpdaterWorkers}}"
                - name: JOB_MODE
                  value: PRICE_UPDATE
                - name: PROMETHEUS_ENDPOINT
                  value: {{ .Values.global.kubeTally.prometheusUrl }}
                - name: CLOUD_PROVIDERS
                  value: {{ .Values.global.kubeTally.pricingUpdaterCloudProviders }}
                - name: CONTROLLER_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
          securityContext:
          {{- if .Values.kubetally.chargeUpdater.podSecurityContext }}
          {{ toYaml .Values.kubetally.chargeUpdater.podSecurityContext | nindent 12 }}
          {{- end }}
          imagePullSecrets:
            - name: {{ .Values.kubetally.imagePullSecretName }}
          restartPolicy: Never
      backoffLimit: 4
      ttlSecondsAfterFinished: 86400


---
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.kubetally.kubeTallyReport.labels }}
  labels:
  {{ toYaml .Values.kubetally.kubeTallyReport.labels | nindent 4 }}
  {{- end }}
  {{- if .Values.kubetally.kubeTallyReport.annotations }}
  annotations:
  {{ toYaml .Values.kubetally.kubeTallyReport.annotations | nindent 4 }}
  {{- end }}
  name: kubetally-report
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- if .Values.kubetally.kubeTallyReport.labels }}
    {{ toYaml .Values.kubetally.kubeTallyReport.labels | nindent 6 }}
    {{- end }}
  strategy: {}
  template:
    metadata:
      annotations:
        {{- if .Values.kubetally.kubeTallyReport.annotations }}
        {{ toYaml .Values.kubetally.kubeTallyReport.annotations | nindent 8 }}
        {{- end }}
      {{- if .Values.kubetally.kubeTallyReport.labels }}
      labels:
      {{ toYaml .Values.kubetally.kubeTallyReport.labels | nindent 8 }}
      {{- end }}
    spec:
      containers:
        - name: report-service
          securityContext:
          {{- if .Values.kubetally.kubeTallyReport.containerSecurityContext }}
          {{ toYaml .Values.kubetally.kubeTallyReport.containerSecurityContext | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.kubetally.kubeTallyReport.imagePullPolicy }}
          image: '{{ .Values.kubetally.kubeTallyReport.imageRegistry }}/{{ .Values.kubetally.kubeTallyReport.image}}:{{ .Values.kubetally.kubeTallyReport.tag }}'
          env:
            - name: APP_ENV
              value: production
            - name: PRICE_DATABASE_ADDR
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresAddr
            - name: PRICE_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresPort
            - name: PRICE_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresUser
            - name: PRICE_DATABASE_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresPassword
            - name: PRICE_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresDB
            - name: DATABASE_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresSslmode
            - name: HOURS_AGO
              value: '{{ .Values.global.kubeTally.dataProcessingHoursAgo }}'
            - name: PROMETHEUS_ENDPOINT
              value: {{ .Values.global.kubeTally.prometheusUrl }}
            - name: NUM_AWS_PULL_WORKERS
              value: "{{.Values.global.kubeTally.priceUpdaterWorkers}}"
            - name: METRIC_COLLECTOR_PORT
              value: "18080"
          {{- if .Values.kubetally.kubeTallyReport.resources }}
          resources: 
          {{ toYaml .Values.kubetally.kubeTallyReport.resources | nindent 12 }}
          {{- end }}
      securityContext:
      {{- if .Values.kubetally.kubeTallyReport.podSecurityContext }}
      {{ toYaml .Values.kubetally.kubeTallyReport.podSecurityContext | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.kubetally.imagePullSecretName }}
      tolerations:
        - operator: "Exists"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: report-service
  name: kubetally-report-metrics
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 18080
    protocol: TCP
    targetPort: 18080
  selector:
    app: report-service
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kubetally-pricing-updater-job
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-weight": "-1"
spec:
  template:
    metadata:
      annotations:
      {{- if .Values.kubetally.chargeUpdater.annotations }}
      {{ toYaml .Values.kubetally.chargeUpdater.annotations | nindent 8 }}
      {{- end }}
    spec:
      containers:
        - name: pricing-updater
          securityContext:
          {{- if .Values.kubetally.chargeUpdater.containerSecurityContext }}
          {{ toYaml .Values.kubetally.chargeUpdater.containerSecurityContext | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.kubetally.chargeUpdater.imagePullPolicy }}
          image: '{{ .Values.kubetally.chargeUpdater.imageRegistry }}/{{ .Values.kubetally.chargeUpdater.image}}:{{ .Values.kubetally.chargeUpdater.tag }}'
          env:
            - name: APP_ENV
              value: Production
            - name: PRICE_DATABASE_ADDR
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresAddr
            - name: PRICE_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresPort
            - name: PRICE_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresUser
            - name: PRICE_DATABASE_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresPassword
            - name: PRICE_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresDB
            - name: DATABASE_SSL_MODE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.kubeTally.postgresSecretName | default "kubetally-db-credentials" }}  # Uses the provided or default secret name
                  key: postgresSslmode
            - name: NUM_AWS_PULL_WORKERS
              value: "{{.Values.global.kubeTally.priceUpdaterWorkers}}"
            - name: JOB_MODE
              value: PRICE_UPDATE
            - name: PROMETHEUS_ENDPOINT
              value: {{ .Values.global.kubeTally.prometheusUrl }}
            - name: CONTROLLER_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
      securityContext:
      {{- if .Values.kubetally.chargeUpdater.podSecurityContext }}
      {{ toYaml .Values.kubetally.chargeUpdater.podSecurityContext | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.kubetally.imagePullSecretName }}
      restartPolicy: Never
  ttlSecondsAfterFinished: 86400