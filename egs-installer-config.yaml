# Base path to the root directory of your cloned repository
base_path: "" # if empty it will take relative path to script as base path

# Precheck options
precheck: true  # Run prechecks before installation
kubeslice_precheck: true  # Specific precheck for Kubeslice components

# Global installation verification settings
verify_install: true  # Enable installation verification globally
verify_install_timeout: 600  # Global timeout for verification (in seconds)
skip_on_verify_fail: false  # Decide whether to skip or error out if verification fails globally

# Helm repository settings
global_helm_repo_url: "https://smartscaler.nexus.aveshalabs.io/repository/kubeslice-egs-helm-ent-prod"
global_helm_username: ""  # Global Helm repository username
global_helm_password: ""  # Global Helm repository password
readd_helm_repos: true  # Re-add Helm repositories if they already exist

# List of required binaries for the installation process
required_binaries:
  - yq
  - helm
  - kubectl

# Global image pull secret settings
global_image_pull_secret:
  repository: "https://index.docker.io/v1/"
  username: ""  # Global Docker registry username
  password: ""  # Global Docker registry password

# Node labeling settings
add_node_label: true  # Enable node labeling during installation

# Kubeconfig settings
global_kubeconfig: ""  # Relative path to global kubeconfig file
use_local_charts: true  # Use local charts instead of pulling from a repository
local_charts_path: "charts"  # Relative path to local charts directory
global_kubecontext: ""  # Global kubecontext, if empty, the default context will be used
use_global_context: true  # Use global kubecontext by default for all operations

# Enable or disable specific stages of the installation
enable_prepare_worker_values_file: true  # Enable preparing worker values file
enable_install_controller: true  # Enable installation of the controller
enable_install_ui: true  # Enable installation of the UI
enable_install_worker: true  # Enable installation of the worker

# Kubeslice controller installation settings
kubeslice_controller_egs:
  skip_installation: false  # Do not skip the installation of the controller
  use_global_kubeconfig: true  # Use global kubeconfig for the controller
  specific_use_local_charts: true
  kubeconfig: ""  # Relative path to controller kubeconfig file
  kubecontext: ""  # Controller-specific kubecontext, uses global if empty
  namespace: "kubeslice-controller"  # Kubernetes namespace for the controller
  release: "kubeslice-controller-release"  # Helm release name for the controller
  chart: "kubeslice-controller-egs"  # Helm chart name for the controller
  inline_values:  # Inline values for the Helm chart
    kubeslice:
      controller:
        endpoint: ""  # Controller endpoint, should be set during installation
  helm_flags: "--timeout 10m --atomic"  # Additional Helm flags for installation
  verify_install: true  # Verify controller installation
  verify_install_timeout: 30  # Timeout for controller installation verification (in seconds)
  skip_on_verify_fail: false  # Do not skip if verification fails

# Kubeslice UI installation settings
kubeslice_ui_egs:
  skip_installation: false  # Do not skip the installation of the UI
  use_global_kubeconfig: true  # Use global kubeconfig for the UI
  namespace: "kubeslice-controller"  # Kubernetes namespace for the UI
  release: "kubeslice-ui"  # Helm release name for the UI
  chart: "kubeslice-ui-egs"  # Helm chart name for the UI
  helm_flags: "--atomic"  # Additional Helm flags for installation
  verify_install: true  # Verify UI installation
  verify_install_timeout: 50  # Timeout for UI installation verification (in seconds)
  skip_on_verify_fail: false  # Skip if UI verification fails
  specific_use_local_charts: true

# Kubeslice worker installation settings
kubeslice_worker_egs:
  - name: "worker-1"
    use_global_kubeconfig: true  # Use global kubeconfig for this worker
    skip_installation: false  # Do not skip the installation of the worker
    specific_use_local_charts: true
    namespace: "kubeslice-system"  # Kubernetes namespace for the worker
    release: "kubeslice-worker1-release"  # Helm release name for the worker
    chart: "kubeslice-worker-egs"  # Helm chart name for the worker
    inline_values:  # Inline values for the worker Helm chart
      kubesliceNetworking:
        enabled: false  # Disable Kubeslice networking for this worker
      egs:
        prometheusEndpoint: "http://prometheus-test"  # Prometheus endpoint
        grafanaDashboardBaseUrl: "http://grafana-test"  # Grafana dashboard base URL
      metrics:
        insecure: true  # Allow insecure connections for metrics
    helm_flags: "--atomic"  # Additional Helm flags for worker installation
    verify_install: true  # Verify worker installation
    verify_install_timeout: 60  # Timeout for worker installation verification (in seconds)
    skip_on_verify_fail: false  # Do not skip if worker verification fails

# Project and cluster registration settings
enable_project_creation: true  # Enable project creation
enable_cluster_registration: true  # Enable cluster registration

# Define projects
projects:
  - name: "avesha"
    username: "admin"  # Username associated with the project

# Define cluster registration
cluster_registration:
  - cluster_name: "worker-1"
    project_name: "avesha"
    telemetry:
      enabled: true  # Enable telemetry for this cluster
      endpoint: ""  # Telemetry endpoint, should be set during registration
      telemetryProvider: "prometheus"  # Telemetry provider
    geoLocation:
      cloudProvider: "GCP"  # Cloud provider for this cluster
      cloudRegion: "us-central1"  # Cloud region for this cluster

enable_install_additional_apps: true  # or false

additional_apps:
  - name: "gpu-operator"
    skip_installation: false
    use_global_kubeconfig: true
    namespace: "gpu-operator"
    release: "gpu-operator-release"
    chart: "gpu-operator"
    repo_url: "https://helm.ngc.nvidia.com/nvidia"
    version: "v24.6.0"
    specific_use_local_charts: false  # Override to use the remote chart instead of local
    inline_values:
      hostPaths:
        driverInstallDir: "/home/kubernetes/bin/nvidia"
      toolkit:
        installDir: "/home/kubernetes/bin/nvidia"
      cdi:
        enabled: true
        default: true
      driver:
        enabled: false
    helm_flags: "--wait"
    verify_install: true
    verify_install_timeout: 600
    skip_on_verify_fail: false

  - name: "prometheus"
    skip_installation: false
    use_global_kubeconfig: true
    namespace: "monitoring"
    release: "prometheus"
    chart: "kube-prometheus-stack"
    repo_url: "https://prometheus-community.github.io/helm-charts"
    version: "v45.0.0"  
    specific_use_local_charts: false  
    values_file: ""  
    inline_values:
      prometheus:
        service:
          type: LoadBalancer
          port: 32270
        prometheusSpec:
          additionalScrapeConfigs:
          - job_name: tgi
            kubernetes_sd_configs:
            - role: endpoints
            relabel_configs:
            - source_labels: [__meta_kubernetes_pod_name]
              target_label: pod_name
            - source_labels: [__meta_kubernetes_pod_container_name]
              target_label: container_name
            static_configs:
              - targets: ["llm-inference.demo.svc.cluster.local:80"]
          - job_name: gpu-metrics
            scrape_interval: 1s
            metrics_path: /metrics
            scheme: http
            kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                names:
                - gpu-operator
            relabel_configs:
            - source_labels: [__meta_kubernetes_endpoints_name]
              action: drop
              regex: .*-node-feature-discovery-master
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: kubernetes_node
      grafana:
        enabled: true
        persistence:
          enabled: true
          size: 1Gi
    helm_flags: "--wait"
    verify_install: true
    verify_install_timeout: 600
    skip_on_verify_fail: false
